{
  "version": 3,
  "sources": ["../version.js", "../src/lib/check-type.js", "../src/lib/create-root.js", "../src/lib/create-css.js", "../src/helpers/is-browser.js", "../src/helpers/send-error.js", "../src/lib/create-media-width.js", "../src/lib/parser/parse-media.js", "../src/lib/prerender.js", "../src/lib/timer.js", "../src/lib/update-store.js", "../src/lib/render.js", "../src/lib/format-selector.js", "../src/helpers/escape.js", "../src/lib/parser/parse-states.js", "../src/lib/parser/parse-rule.js", "../src/helpers/color/calc-opacity.js", "../src/helpers/color/color-names.js", "../src/helpers/color/hex-alpha.js", "../src/helpers/color/var-color.js", "../src/helpers/color/create-var.js", "../src/helpers/color/from-rgb.js", "../src/helpers/create-color.js", "../src/lib/parser/parse-value.js", "../src/lib/parser/parse-styles.js", "../src/lib/create-rule.js", "../src/lib/parser/index.js", "../src/lib/create-store.js", "../src/theme/attrs/flex.js", "../src/theme/attrs/grid.js", "../src/theme/attrs/text.js", "../src/theme/attrs/index.js", "../src/theme/class.js", "../src/theme/colors.js", "../src/theme/font.js", "../src/theme/reset.js", "../src/theme/screen.js", "../src/theme/states.js", "../src/node/funcs/create-attr-regexp.js", "../src/lib/from-html.js", "../src/blick.js", "../src/browser.js"],
  "sourcesContent": ["export default \"2.1.4\"", "function isElement(element) {\r\n    try {\r\n        return (\r\n            element instanceof Element ||\r\n            element instanceof HTMLElement ||\r\n            (\r\n                element.nodeName &&\r\n                element.nodeType &&\r\n                element.ownerDocument \r\n            )\r\n        )  \r\n    } catch (error) {\r\n        return false\r\n    }\r\n}\r\n\r\nconst TYPES = {\r\n    func: (e) => typeof e === 'function',\r\n    str:  (e) => typeof e === 'string',\r\n    obj:  (e) => typeof e === 'object',\r\n    num:  (e) => typeof e === 'number',\r\n    arr:  (e) => Array.isArray(e),\r\n    var:  (e) => /^\\$.+/.test(e),\r\n    hex:  (e) => /^#[\\dabcdef]{3,8}$/.test(String(e).trim()),\r\n    exist: (e) => e !== undefined,\r\n    null:  (e) => e === null,\r\n    undef: (e) => e === undefined,\r\n    element: (e) => isElement(e),\r\n};\r\n\r\nexport const is = {\r\n    ...TYPES,\r\n\r\n    // not: new Proxy(TYPES, {\r\n    //     get(obj, key) {\r\n    //         if (key in obj) {\r\n    //             return (val) => !obj[key](val);\r\n    //         } else {\r\n    //             throw new Error(`BlickCss: type '${key}' don't exist`);\r\n    //         }\r\n    //     },\r\n    // }),\r\n};\r\n", "// import context from '../context.js';\r\nimport { is } from './check-type.js';\r\n\r\nexport default function(ctx) {\r\n    // const ctx = context.get()\r\n\r\n    let fonts = '';\r\n    let colors = '';\r\n\r\n    for (const type in ctx?.font) {\r\n        fonts += `--font-${type}:${ctx.font[type]};`;\r\n    }\r\n\r\n    for (const color in ctx?.colors) {\r\n        if (is.str(ctx.colors[color])) {\r\n            colors += `--${color}:${ctx.colors[color]};`;\r\n            continue;\r\n        }\r\n\r\n        for (const num in ctx.colors[color]) {\r\n            colors += `--${color + (num === 'def' ? '' : '-' + num)}:${\r\n                ctx.colors[color][num]\r\n            };`;\r\n        }\r\n    }\r\n    return `:root{${colors + fonts}}`;\r\n}\r\n", "// import context from '../context.js';\r\nimport createRoot from './create-root.js';\r\n\r\nexport default function(ctx) {\r\n    // const ctx = context.get()\r\n    const STORE = ctx._STORE_.CSS_STORE\r\n    \r\n    let media_str = '';\r\n    let css_str = '';\r\n\r\n    for (const attr in STORE) {\r\n        if (attr === 'MEDIA') {\r\n            for (const md in STORE.MEDIA) {\r\n                media_str += `@media${md}{${STORE.MEDIA[md]}}`;\r\n            }\r\n            continue;\r\n        }\r\n        css_str += STORE[attr];\r\n    }\r\n\r\n    let result_css = \"\"\r\n\r\n    result_css += `/* ! blickcss v${ctx.version} | MIT License | https://github.com/ghtx280/blickcss */\\n\\n`\r\n\r\n    if (ctx.reset) {\r\n        result_css += ctx.reset\r\n    }\r\n    if (ctx.root) {\r\n        result_css += createRoot(ctx)\r\n    }\r\n    if (ctx.wrapper) {\r\n        result_css += `${ctx.wrapper}{display:block;width:100%;margin:0 auto;padding-left:var(--wrapper-padding,15px);padding-right:var(--wrapper-padding,15px)}`\r\n    }\r\n\r\n    for (const key in ctx.attr) {\r\n        if (ctx.attr[key]?._using && key in STORE) {\r\n            result_css += `[${key}]{${ctx.attr[key]._using}}`\r\n        }\r\n    }\r\n\r\n    if (ctx.autoFlex) {\r\n        result_css += '[class*=\"flex-\"],[class*=\"jc-\"],[class*=\"ai-\"],[class*=\"gap-\"]{display:flex}'\r\n    }\r\n\r\n    return (\r\n        result_css + css_str + media_str\r\n    )\r\n}\r\n\r\n// ${KEYFRAMES}\r\n", "/**\r\n * @returns {boolean}\r\n */\r\nexport default function(){\r\n    return typeof window !== \"undefined\"\r\n}", "import isBrowser from \"./is-browser.js\";\r\n\r\n/**\r\n * send error in terminal\r\n * @param {string} text \r\n */\r\nexport default function(text){\r\n    if (isBrowser()) {\r\n        console.error(\"BlickError: \" + text);\r\n    }\r\n    else {\r\n        console.log(\"\\x1b[31m\\x1b[1m\");\r\n        console.log(\"BlickError: \" + text);\r\n        console.log(\"\\x1b[0m\");\r\n    }\r\n}", "import { is } from './check-type.js';\r\n\r\nexport function createMediaWidth(sizes) {\r\n    if (!is.obj(sizes)) sizes = [sizes];\r\n\r\n    const WIDTHS = [];\r\n\r\n    for (const index in sizes) {\r\n        let size = sizes[index];\r\n\r\n        if (!size) continue;\r\n\r\n        size = size.toString().replace(/\\(|\\)/g, '');\r\n\r\n        if (+size[0]) {\r\n            let type = +index === 0 ? 'min' : 'max';\r\n            let unit = +size ? 'px' : '';\r\n\r\n            WIDTHS.push(`(${type}-width:${size}${unit})`);\r\n        } else {\r\n            WIDTHS.push(`(${size})`);\r\n        }\r\n    }\r\n\r\n    return WIDTHS.join(' and ');\r\n}\r\n", "// import context from '../../context.js';\r\nimport sendError from '../../helpers/send-error.js';\r\nimport { createMediaWidth } from '../create-media-width.js';\r\n\r\nexport class MediaParser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx\r\n    }\r\n\r\n    parse(str) {\r\n        if (!str) return sendError(`value is required, (${str})`);\r\n    \r\n        if (str.startsWith(this.ctx.maxPrefix)) {\r\n            str = str.slice(this.ctx.maxPrefix.length);\r\n            return createMediaWidth([null, this.ctx.screen[str] || str]);\r\n        }\r\n    \r\n        return createMediaWidth(this.ctx.screen[str] || str);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  function CreateMediaParser(ctx) {\r\n//     return function(str) {\r\n//         // const ctx = context.get()\r\n        \r\n//         if (!str) throw new Error(`value is required, (${str})`);\r\n    \r\n//         if (str.startsWith(ctx.maxPrefix)) {\r\n//             str = str.slice(ctx.maxPrefix.length);\r\n//             return createMediaWidth([null, ctx.screen[str] || str]);\r\n//         }\r\n    \r\n//         return createMediaWidth(ctx.screen[str] || str);\r\n//     }\r\n// }", "// import context from '../context.js';\r\nimport { is } from './check-type.js';\r\nimport { MediaParser } from './parser/parse-media.js';\r\n\r\nexport default function(ctx) {\r\n    // const ctx = context.get()\r\n   \r\n    if (!ctx.dark) {\r\n        ctx.dark = ctx.states.dark('').trim();\r\n    }\r\n\r\n    if (typeof window !== undefined) {\r\n        if (\r\n            ctx.autoTheme &&\r\n            matchMedia('(prefers-color-scheme: dark)').matches\r\n        ) {\r\n            if (ctx.dark.startsWith('.')) {\r\n                document.documentElement.classList.add(ctx.dark.slice(1));\r\n            } else if (ctx.dark.startsWith('#')) {\r\n                document.documentElement.id = ctx.dark.slice(1);\r\n            } else if (ctx.dark.startsWith('[') && ctx.dark.endsWith(']')) {\r\n                document.documentElement.setAttribute(ctx.dark.slice(1, -1));\r\n            }\r\n        }\r\n    }\r\n\r\n    if (ctx.wrapper) {\r\n        const parseMedia = new MediaParser(ctx)\r\n\r\n        for (const scr in ctx.screen) {\r\n            let size = ctx.screen[scr];\r\n\r\n            ctx._STORE_.CSS_STORE.MEDIA[parseMedia.parse(scr)] =\r\n                ctx.wrapper + `{max-width:${is.num(size) ? size : size[0]}px}`;\r\n        }\r\n    }\r\n}\r\n", "export function timer(label) {\r\n    const startTime = performance.now();\r\n    const diff = () => performance.now() - startTime\r\n    return {\r\n        stop() {\r\n            console.log(`${label}: ${diff().toFixed(1)}ms`);\r\n        },\r\n        get() {\r\n            return diff().toFixed(1)\r\n        },\r\n        getFormated(){\r\n            return `${diff().toFixed(1)}ms`\r\n        }\r\n    };\r\n}\r\n", "// import context from \"../context.js\";\r\n\r\nexport function updateStore(ctx, token, attr) {\r\n    // const ctx = context.get();\r\n\r\n    const AS = ctx._STORE_.ATTRS_STORE;\r\n    const SS = ctx._STORE_.STYLE_STORE;\r\n    const MS = ctx._STORE_.MEDIA_STORE;\r\n    const CS = ctx._STORE_.CSS_STORE;\r\n\r\n\r\n    if (!(attr in CS)) CS[attr] = '';\r\n    if (!(attr in SS)) SS[attr] = Object.create(null);\r\n    if (!(attr in AS)) AS[attr] = Object.create(null);\r\n    if (token in SS[attr]) return false;\r\n    if (token in AS[attr]) return false;\r\n\r\n    AS[attr][token] = true;\r\n\r\n    const STRUCT = ctx.parse(token, attr)?.create()\r\n\r\n    if (!STRUCT) return false\r\n\r\n    const MEDIA = STRUCT.media\r\n    const RULE = STRUCT.css()\r\n\r\n    // const [MEDIA, RULE] = ctx.parse(token, attr) || [[], ''];\r\n\r\n    if (!RULE) {\r\n        SS[attr][token] = null;\r\n        return false;\r\n    }\r\n\r\n    if (MEDIA) {\r\n        for (const m of MEDIA) {\r\n            if (!(m.raw in MS)) MS[m.raw] = Object.create(null);\r\n            if (!(m.val in CS.MEDIA)) CS.MEDIA[m.val] = '';\r\n            if (token in MS[m.raw]) return false;\r\n\r\n            MS[m.raw][token] = RULE;\r\n            CS.MEDIA[m.val] += RULE;\r\n        }\r\n    }\r\n    else {\r\n        SS[attr][token] = RULE;\r\n        CS[attr] += RULE;\r\n    }\r\n\r\n    return true\r\n}", "// import tag from '../style-tag.js';\r\n// import context from '../context.js';\r\nimport createCss from './create-css.js';\r\nimport prerender from './prerender.js';\r\n\r\nimport { is } from './check-type.js';\r\nimport { timer } from './timer.js';\r\nimport { updateStore } from './update-store.js';\r\n\r\nlet once;\r\n\r\nexport default function(ctx) {\r\n    // const ctx = context.get()\r\n    \r\n    // temporarily disabled\r\n    // if (record && !checkRecord(record)) return;\r\n    \r\n    const TIMER = timer('Blick: Styles updated');\r\n    const ATTRS = ['class', ...Object.keys(ctx.attr)];\r\n    const NODES = document.querySelectorAll(ATTRS.map((e) => `[${e}]`).join());\r\n\r\n    if (!once || ctx._CLI_) {\r\n        prerender(ctx);\r\n        once = true;\r\n    }\r\n\r\n    let is_style_updated;\r\n\r\n    NODES.forEach((node) => {\r\n        for (const attr of ATTRS) {\r\n            let ATTR_VALUE = node.getAttribute(attr);\r\n            \r\n            if (is.str(ATTR_VALUE)) ATTR_VALUE = ATTR_VALUE.trim();\r\n\r\n            if (!ATTR_VALUE) continue;\r\n\r\n            for (const token of ATTR_VALUE.trim().split(/\\s+/g)) {\r\n                if (!updateStore(ctx, token, attr)) {\r\n                    continue\r\n                }\r\n                is_style_updated = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    if (is_style_updated) {\r\n        ctx.element.textContent = createCss(ctx);\r\n        if (ctx.time) TIMER.stop(); // debugging the script execution time\r\n    }\r\n\r\n    return ctx.element.textContent;\r\n}\r\n", "export default function (token, attr = 'class') {\r\n    let format = token;\r\n\r\n    format = format.replace(/[^\\w-_]/g, '\\\\$&').replace(/^\\d/, '\\\\3$& ');\r\n\r\n    if (attr === 'raw') {\r\n        return format;\r\n    }\r\n    if (attr === 'class') {\r\n        return `.${format}`;\r\n    }\r\n\r\n    return `[${attr}~=\"${token}\"]`;\r\n}\r\n", "export function escape(str = \"\", symbol = \"\") {\n    const RE = new RegExp(`(\\\\\\\\)?\\\\${symbol}`, 'g')\n    \n\n    function execRegexp(replacement) {\n        return str.replace(RE, (_, esc) => {\n            if (esc) {\n               return _ \n            }\n            return replacement || \"\\n\"\n        })\n    }\n\n    return {\n        replace(replacement){\n            return execRegexp(replacement)\n        },\n\n        split(){\n            return execRegexp().split()\n        }\n    }\n}", "// import context from '../../context.js';\r\nimport { escape } from '../../helpers/escape.js';\r\nimport { is } from '../check-type.js';\r\nimport { MediaParser } from './parse-media.js';\r\n\r\nexport class StatesParser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n        this.parseMedia = new MediaParser(ctx)\r\n    }\r\n\r\n    parse(state, attr) {\r\n        const IS_IN_ARR = state in this.ctx.screen;\r\n        const IS_MAX_WD = state.startsWith(this.ctx.maxPrefix);\r\n        const IS_NUMBER = +state;\r\n\r\n        let raw = state;\r\n        let val = null;\r\n        let type = null;\r\n\r\n        if (IS_IN_ARR || IS_NUMBER || IS_MAX_WD) {\r\n            val = this.parseMedia.parse(state);\r\n            type = 'media';\r\n        } else {\r\n            if (raw.startsWith('&')) {\r\n                val = raw.slice(1);\r\n            } else {\r\n                val = this.ctx.states[raw] || ':' + raw;\r\n            }\r\n            if (is.str(val)) {\r\n                // val = val.replace(/(?<!\\\\)_/g, ' ');\r\n                val = escape(val, \"_\").replace(\" \")\r\n            }\r\n\r\n            type = 'pseudo';\r\n        }\r\n        return { raw, val, type };\r\n    }\r\n}\r\n\r\n// export function CreateStatesParser(ctx){\r\n\r\n//     const parseMedia = new MediaParser(ctx)\r\n\r\n//     return function(state, attr) {\r\n\r\n//         const IS_IN_ARR = state in ctx.screen;\r\n//         const IS_MAX_WD = state.startsWith(ctx.maxPrefix);\r\n//         const IS_NUMBER = +state;\r\n\r\n//         let raw = state;\r\n//         let val = null;\r\n//         let type = null;\r\n\r\n//         if (IS_IN_ARR || IS_NUMBER || IS_MAX_WD) {\r\n//             val = parseMedia(state);\r\n//             type = 'media';\r\n//         } else {\r\n//             if (raw.startsWith('&')) {\r\n//                 val = raw.slice(1);\r\n//             } else {\r\n//                 val = ctx.states[raw] || ':' + raw;\r\n//             }\r\n//             if (is.str(val)) {\r\n//                 val = val.replace(/(?<!\\\\)_/g, ' ');\r\n//             }\r\n\r\n//             type = 'pseudo';\r\n//         }\r\n//         return { raw, val, type };\r\n//     }\r\n// }\r\n", "// export function CreateRuleParser(ctx) {\r\n//     return function(path, object) {\r\n//         const PARTS = path.split(/(?<!\\\\)-/g);\r\n//         let array_path = [];\r\n//         let value_string = null;\r\n    \r\n//         for (const i in PARTS) {\r\n//             if (!object[PARTS[i]]) {\r\n//                 if (i == 0) object = null;\r\n//                 value_string = PARTS.slice(i).join('-');\r\n//                 break;\r\n//             }\r\n//             array_path.push(PARTS[i]);\r\n//             object = object[PARTS[i]];\r\n//         }\r\n    \r\n//         return {\r\n//             path: array_path,\r\n//             value: value_string,\r\n//             source: object,\r\n//         };\r\n//     }\r\n    \r\n// }\r\n\r\nexport class RuleParser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx\r\n    }\r\n\r\n    parse(path, object){\r\n        const SPLIT_SYMBOL = \"-\"\r\n        const RE_PATH = new RegExp(`(\\\\\\\\)?\\\\${SPLIT_SYMBOL}`, \"g\");\r\n\r\n        const PARTS = path.replace(RE_PATH, (_, esc) => esc ? SPLIT_SYMBOL : \"\\n\" ).split(\"\\n\")\r\n        let array_path = [];\r\n        let value_string = null;\r\n\r\n    \r\n        for (const i in PARTS) {\r\n            if (!object[PARTS[i]]) {\r\n                if (i == 0) object = null;\r\n                value_string = PARTS.slice(i).join('-');\r\n                break;\r\n            }\r\n            array_path.push(PARTS[i]);\r\n            object = object[PARTS[i]];\r\n        }\r\n    \r\n        return {\r\n            path: array_path,\r\n            value: value_string,\r\n            source: object,\r\n        };\r\n    }\r\n}\r\n", "/**\r\n * \r\n * @param {number} number \r\n * @returns {number}\r\n */\r\nexport default function(number) {\r\n    if (+number) {\r\n        return number > 1 ? number / 100 : number;\r\n    }\r\n    return number\r\n}", "export default {\r\n    aliceblue: '#f0f8ff',   \r\n    antiquewhite: '#faebd7',\r\n    aqua: '#00ffff',        \r\n    aquamarine: '#7fffd4',  \r\n    azure: '#f0ffff',       \r\n    beige: '#f5f5dc',       \r\n    bisque: '#ffe4c4',      \r\n    black: '#000000',\r\n    blanchedalmond: '#ffebcd',\r\n    blue: '#0000ff',\r\n    blueviolet: '#8a2be2',\r\n    brown: '#a52a2a',\r\n    burlywood: '#deb887',\r\n    cadetblue: '#5f9ea0',\r\n    chartreuse: '#7fff00',\r\n    chocolate: '#d2691e',\r\n    coral: '#ff7f50',\r\n    cornflowerblue: '#6495ed',\r\n    cornsilk: '#fff8dc',\r\n    crimson: '#dc143c',\r\n    cyan: '#00ffff',\r\n    darkblue: '#00008b',\r\n    darkcyan: '#008b8b',\r\n    darkgoldenrod: '#b8860b',\r\n    darkgray: '#a9a9a9',\r\n    darkgreen: '#006400',\r\n    darkgrey: '#a9a9a9',\r\n    darkkhaki: '#bdb76b',\r\n    darkmagenta: '#8b008b',\r\n    darkolivegreen: '#556b2f',\r\n    darkorange: '#ff8c00',\r\n    darkorchid: '#9932cc',\r\n    darkred: '#8b0000',\r\n    darksalmon: '#e9967a',\r\n    darkseagreen: '#8fbc8f',\r\n    darkslateblue: '#483d8b',\r\n    darkslategray: '#2f4f4f',\r\n    darkslategrey: '#2f4f4f',\r\n    darkturquoise: '#00ced1',\r\n    darkviolet: '#9400d3',\r\n    deeppink: '#ff1493',\r\n    deepskyblue: '#00bfff',\r\n    dimgray: '#696969',\r\n    dimgrey: '#696969',\r\n    dodgerblue: '#1e90ff',\r\n    firebrick: '#b22222',\r\n    floralwhite: '#fffaf0',\r\n    forestgreen: '#228b22',\r\n    fuchsia: '#ff00ff',\r\n    gainsboro: '#dcdcdc',\r\n    ghostwhite: '#f8f8ff',\r\n    gold: '#ffd700',\r\n    goldenrod: '#daa520',\r\n    gray: '#808080',\r\n    green: '#008000',\r\n    greenyellow: '#adff2f',\r\n    grey: '#808080',\r\n    honeydew: '#f0fff0',\r\n    hotpink: '#ff69b4',\r\n    indianred: '#cd5c5c',\r\n    indigo: '#4b0082',\r\n    ivory: '#fffff0',\r\n    khaki: '#f0e68c',\r\n    lavender: '#e6e6fa',\r\n    lavenderblush: '#fff0f5',\r\n    lawngreen: '#7cfc00',\r\n    lemonchiffon: '#fffacd',\r\n    lightblue: '#add8e6',\r\n    lightcoral: '#f08080',\r\n    lightcyan: '#e0ffff',\r\n    lightgoldenrodyellow: '#fafad2',\r\n    lightgray: '#d3d3d3',\r\n    lightgreen: '#90ee90',\r\n    lightgrey: '#d3d3d3',\r\n    lightpink: '#ffb6c1',\r\n    lightsalmon: '#ffa07a',\r\n    lightseagreen: '#20b2aa',\r\n    lightskyblue: '#87cefa',\r\n    lightslategray: '#778899',\r\n    lightslategrey: '#778899',\r\n    lightsteelblue: '#b0c4de',\r\n    lightyellow: '#ffffe0',\r\n    lime: '#00ff00',\r\n    limegreen: '#32cd32',\r\n    linen: '#faf0e6',\r\n    magenta: '#ff00ff',\r\n    maroon: '#800000',\r\n    mediumaquamarine: '#66cdaa',\r\n    mediumblue: '#0000cd',\r\n    mediumorchid: '#ba55d3',\r\n    mediumpurple: '#9370db',\r\n    mediumseagreen: '#3cb371',\r\n    mediumslateblue: '#7b68ee',\r\n    mediumspringgreen: '#00fa9a',\r\n    mediumturquoise: '#48d1cc',\r\n    mediumvioletred: '#c71585',\r\n    midnightblue: '#191970',\r\n    mintcream: '#f5fffa',\r\n    mistyrose: '#ffe4e1',\r\n    moccasin: '#ffe4b5',\r\n    navajowhite: '#ffdead',\r\n    navy: '#000080',\r\n    oldlace: '#fdf5e6',\r\n    olive: '#808000',\r\n    olivedrab: '#6b8e23',\r\n    orange: '#ffa500',\r\n    orangered: '#ff4500',\r\n    orchid: '#da70d6',\r\n    palegoldenrod: '#eee8aa',\r\n    palegreen: '#98fb98',\r\n    paleturquoise: '#afeeee',\r\n    palevioletred: '#db7093',\r\n    papayawhip: '#ffefd5',\r\n    peachpuff: '#ffdab9',\r\n    peru: '#cd853f',\r\n    pink: '#ffc0cb',\r\n    plum: '#dda0dd',\r\n    powderblue: '#b0e0e6',\r\n    purple: '#800080',\r\n    rebeccapurple: '#663399',\r\n    red: '#ff0000',\r\n    rosybrown: '#bc8f8f',\r\n    royalblue: '#4169e1',\r\n    saddlebrown: '#8b4513',\r\n    salmon: '#fa8072',\r\n    sandybrown: '#f4a460',\r\n    seagreen: '#2e8b57',\r\n    seashell: '#fff5ee',\r\n    sienna: '#a0522d',\r\n    silver: '#c0c0c0',\r\n    skyblue: '#87ceeb',\r\n    slateblue: '#6a5acd',\r\n    slategray: '#708090',\r\n    slategrey: '#708090',\r\n    snow: '#fffafa',\r\n    springgreen: '#00ff7f',\r\n    steelblue: '#4682b4',\r\n    tan: '#d2b48c',\r\n    teal: '#008080',\r\n    thistle: '#d8bfd8',\r\n    tomato: '#ff6347',\r\n    turquoise: '#40e0d0',\r\n    violet: '#ee82ee',\r\n    wheat: '#f5deb3',\r\n    white: '#ffffff',\r\n    whitesmoke: '#f5f5f5',\r\n    yellow: '#ffff00',\r\n    yellowgreen: '#9acd32'\r\n  };", "import sendError from \"../send-error.js\";\r\n\r\n/**\r\n * 50 => 80 (toString(16))\r\n * @param {number | string} num opacity\r\n * @returns {string}\r\n */\r\nexport default function(num) {\r\n    num = +num\r\n\r\n    if (num < 0 || num > 100) {\r\n        sendError('Alpha value must be a from 0 to 100');\r\n        return \"\"\r\n    }\r\n\r\n    let alpha = Math.round((num / 100) * 255).toString(16);\r\n\r\n    if (alpha.length === 1) {\r\n        alpha = '0' + alpha;\r\n    }\r\n\r\n    return alpha;\r\n}", "import { is } from \"../../lib/check-type.js\";\r\nimport { BlickCss } from \"../../blick.js\";\r\n\r\n/**\r\n * \"$foo\" => undefined   \r\n * \"$red\" => \"#ef4444\"\r\n * @param {BlickCss} ctx \r\n * @param {string} str \r\n * @returns {string | undefined}\r\n */\r\nexport default function(ctx, str) {\r\n    const colors = ctx.colors\r\n\r\n    if (!colors) return;\r\n\r\n    if (is.var(str)) {\r\n        str = str.slice(1);\r\n    }\r\n\r\n    const [colorName, shade] = str.split('-');\r\n\r\n    if (shade) {\r\n        if (colors[colorName][shade]) {\r\n            return colors[colorName][shade];\r\n        } else {\r\n            throw Error(\r\n                `Blick: This shade \"${shade}\" is not exist for \"${colorName}\".\\n` +\r\n                    `Available shades: ${Object.keys(colors[colorName]).filter(\r\n                        (e) => e !== 'def'\r\n                    )}`\r\n            );\r\n        }\r\n    }\r\n    return (\r\n        colors[colorName]?.def ||\r\n        colors[colorName]?.DEFAULT ||\r\n        colors[colorName]\r\n    );\r\n}", "import { is } from \"../../lib/check-type.js\";\r\nimport calcOpacity from \"./calc-opacity.js\";\r\nimport hexAlpha from \"./hex-alpha.js\";\r\nimport varColor from \"./var-color.js\";\r\n\r\n/**\r\n * \r\n * @param {string} variable \r\n * @param {string} opacity \r\n * @returns \r\n */\r\nexport default function(ctx, variable, opacity = \"\") {\r\n    if (is.var(variable)) {\r\n        variable = variable.slice(1);\r\n    }\r\n\r\n    if (!opacity) {\r\n        return `var(--${variable})`;\r\n    }\r\n    \r\n    let result = varColor(ctx, variable)\r\n\r\n    if (result) {\r\n        return result + hexAlpha(opacity)\r\n    }\r\n\r\n    return `var(--${variable});opacity:${calcOpacity(opacity)}`;    \r\n}", "/**\r\n * (r, g, b) => \"#rrggbb\"\r\n * @param {string | number} r - red\r\n * @param {string | number} g - green\r\n * @param {string | number} b - blue\r\n * @returns {string}\r\n */\r\nexport default function(r = \"0\", g = \"0\", b = \"0\") {\r\n    return '#' + [r, g, b]\r\n    .map(x => {\r\n        const hex = (+x).toString(16)\r\n        return hex.length === 1 ? '0' + hex : hex\r\n    })\r\n    .join('')\r\n}", "import { BlickCss    } from \"../blick.js\"\r\n\r\nimport calcOpacity from \"./color/calc-opacity.js\"\r\nimport colorNames  from \"./color/color-names.js\"\r\nimport createVar   from \"./color/create-var.js\"\r\nimport varColor    from \"./color/var-color.js\"\r\nimport fromRgb     from \"./color/from-rgb.js\"\r\n\r\nimport sendError from \"./send-error.js\"\r\nimport hexAlpha from \"./color/hex-alpha.js\"\r\n\r\n/**\r\n * hex(\"red\", 50) => #ff000080   \r\n * hex(\"#0f0\", 50) => #00ff0080   \r\n * hex(\"$red\", 50) => #ef444480   \r\n * hex(\"rgb(0,0,255)\", 50) => #0000ff80    \r\n * hex(\"red\") => #ff0000     \r\n * hex(\"#0f0\") => #00ff00   \r\n * hex(\"$red\") => #ef4444    \r\n * hex(\"rgb(0,0,255)\") => #0000ff   \r\n * \r\n * @param {BlickCss} ctx \r\n * @param {string} color \r\n * @param {string} opacity \r\n * @returns {string | null}\r\n */\r\nexport default function(ctx, color, opacity) {\r\n   \r\n    \r\n    // variable handling\r\n    if (color[0] == \"$\") {\r\n       return createVar(ctx, color, opacity)\r\n    }\r\n  \r\n    // hex handling\r\n    if (color[0] === \"#\") {\r\n        if (color.length === 4) {\r\n            let r = color[1]\r\n            let g = color[2]\r\n            let b = color[3]\r\n            return \"#\"+r+r+g+g+b+b + hexAlpha(opacity)\r\n        }\r\n        \r\n        return color + hexAlpha(opacity)\r\n    }\r\n    \r\n    // rgb handling\r\n    if (color.startsWith(\"rgb\")) {\r\n        let [r, g, b, a] = color.replace(/rgba?\\(\\s*|\\s*\\)/g, \"\").split(/\\s*,\\s*/)\r\n        \r\n        return a ? color : fromRgb(r, g, b) + hexAlpha(opacity)\r\n    }\r\n\r\n    // processing of color name \r\n    if (color in colorNames) {\r\n        return colorNames[color] + hexAlpha(opacity)\r\n    }\r\n    else {\r\n        sendError(`Invalid color \"${color}\"`)\r\n    }\r\n\r\n    return null  \r\n}\r\n\r\n\r\n", "// import context from '../../context.js';\r\nimport createColor from '../../helpers/create-color.js';\r\nimport { is } from '../check-type.js';\r\n\r\nexport class ValueParser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx   \r\n    }\r\n\r\n\r\n    getItem(item = '', source = {}, index = 0) {\r\n        const [first, second] = item.replace(/\\\\/g, '').split('/');\r\n        const UNIT = source ? source._unit : '';\r\n    \r\n        if (!first) return;\r\n\r\n        if (+second) {\r\n            if (+first) {\r\n                return +(first / second * 100).toFixed(2) + '%';\r\n            }\r\n            else {\r\n                return createColor(this.ctx, first, second)\r\n            }\r\n        }\r\n    \r\n        if (is.var(first)) {\r\n            return createColor(this.ctx, first)\r\n        }\r\n    \r\n        if (is.arr(UNIT)) {\r\n            return +item ? item + (UNIT[index] || \"\") : item;\r\n        }\r\n        \r\n        return +item ? item + UNIT : item;\r\n    }\r\n    \r\n    /*\r\n      (num/num) 1/2 = 50%\r\n      (var/num) $foo/50 = foo in blick.colors ? getVarColor(foo) : var(--foo);opacity:0.5 \r\n      (str/num) red/50 = #ff000080\r\n    \r\n      (num) 15 = 15 + (unit || \"\")\r\n      (var) $foo = var(--foo)\r\n      (str) 5em = 5em\r\n    */\r\n    \r\n    parse(value = '', source = {}) {\r\n        if (!value) return null;\r\n        const S = this.ctx.divisionSymbol\r\n        const RE_SPLIT = new RegExp(`([^${S}\\\\\\\\])\\\\${S}`, 'g')\r\n    \r\n        if (!is.arr(value)) {  \r\n            value = value.replace(RE_SPLIT, \"$1\\n\").split(\"\\n\")\r\n        }\r\n\r\n\r\n        let values = value.map((item, index) => {\r\n            const STATIC = source._vals ? source._vals[item] : null\r\n\r\n            if (STATIC) {\r\n                return { val: STATIC, raw: item };\r\n            }\r\n\r\n            const DYNAMIC = this.getItem(item, source, index)\r\n\r\n            if (DYNAMIC) {\r\n                return { val: DYNAMIC.replace(/\\\\/g, ''), raw: item };\r\n            }\r\n            \r\n        });\r\n    \r\n        if (values.filter(e => e).length) {\r\n            return values\r\n        }\r\n    \r\n        return null\r\n        \r\n    }\r\n}\r\n\r\n// export function CreateValueParser(ctx) {\r\n\r\n//     function createColor(color, opacity) {\r\n        \r\n//         try {\r\n//             if (ctx._COLOR_) {\r\n//                 return ctx._COLOR_(color, opacity);\r\n//             }\r\n//             // return getHex(color) + getHexAlpha(opacity);\r\n//             return \"hui\"\r\n//         } catch (error) {\r\n//             console.log(error + \"\");\r\n//             return null\r\n//         }\r\n        \r\n//     }\r\n    \r\n//     function createVar(variable, opacity = '') {\r\n//         if (is.var(variable)) {\r\n//             variable = variable.slice(1);\r\n//         }\r\n//         if (opacity) {\r\n//             opacity = `;opacity:${opacity}`;\r\n//         }\r\n    \r\n//         return `var(--${variable})${opacity}`;\r\n//     }\r\n    \r\n//     function calcOpacity(number) {\r\n//         if (+number) {\r\n//             return number > 1 ? number / 100 : number;\r\n//         }\r\n//     }\r\n    \r\n//     function getItem(item = '', source = {}, index = 0) {\r\n//         const [first, second] = item.replaceAll('\\\\', '').split('/');\r\n//         const UNIT = source?._unit || '';\r\n    \r\n//         if (!first) return;\r\n    \r\n//         if (second && +second) {\r\n//             if (+first) {\r\n//                 return +((first / second) * 100).toFixed(2) + '%';\r\n//             }\r\n    \r\n//             if (is.var(first)) {\r\n//                 const COLOR = getVarColor(first);\r\n    \r\n//                 if (COLOR) {\r\n//                     return createColor(COLOR, second);\r\n//                 }\r\n    \r\n//                 return createVar(first, calcOpacity(second));\r\n//             }\r\n    \r\n//             return createColor(first, second);\r\n//         }\r\n    \r\n//         if (is.var(first)) {\r\n//             return createVar(first);\r\n//         }\r\n    \r\n//         if (Array.isArray(UNIT)) {\r\n//             return +item ? item + (UNIT[index] || \"\") : item;\r\n//         }\r\n        \r\n//         return +item ? item + UNIT : item;\r\n//     }\r\n    \r\n//     /*\r\n//       (num/num) 1/2 = 50%\r\n//       (var/num) $foo/50 = foo in blick.colors ? getVarColor(foo) : var(--foo);opacity:0.5 \r\n//       (str/num) red/50 = #ff000080\r\n    \r\n//       (num) 15 = 15 + (unit || \"\")\r\n//       (var) $foo = var(--foo)\r\n//       (str) 5em = 5em\r\n//     */\r\n    \r\n//     return function(value = '', source = {}) {\r\n//         if (!value) return null;\r\n    \r\n//         if (!is.arr(value)) {\r\n//             value = value.split(/(?<!\\\\)\\+/g)\r\n//         }\r\n        \r\n    \r\n//         let fff = value.map((item, index) => {\r\n//             return {\r\n//                 val:\r\n//                     source._vals?.[item] ??\r\n//                     getItem(item, source, index)?.replace(/\\\\/g, ''),\r\n//                 raw: item,\r\n//             };\r\n//         });\r\n    \r\n//         if (fff.filter(e => e.val).length) {\r\n//             return fff\r\n//         }\r\n    \r\n//         return null\r\n        \r\n//     }\r\n// }\r\n", "import { RuleParser } from './parse-rule.js';\r\nimport { ValueParser } from './parse-value.js';\r\nimport { is } from '../check-type.js';\r\n// import context from '../../context.js';\r\n\r\nexport class StylesParser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n        this.parseValue = new ValueParser(ctx);\r\n        this.parseRule = new RuleParser(ctx);\r\n    }\r\n\r\n    parse(style, attr, token, states) {\r\n        let target;\r\n        let declaration = null;\r\n        let values = null;\r\n        let important = false;\r\n\r\n        if (attr == \"class\") {\r\n            target = this.ctx.class\r\n        }\r\n        else {\r\n            target = this.ctx.attr[attr]\r\n        }\r\n\r\n        if (style.includes('!')) {\r\n            style = style.replace(/!/g, '');\r\n            important = true;\r\n        }\r\n\r\n        let { source, path, value } = this.parseRule.parse(style, target);\r\n\r\n        /* _else func for attr where no data (flex=\"20\" or text=\"red\") */\r\n        if (!source && attr !== 'class') {\r\n            /* \r\n                variants _else func returning:\r\n                [{sourse}, [values]] -> [{_prop:\"color:$\"}, [\"red\"]]\r\n                [prop, [values]]     -> [\"color:$\", [\"red\"]]\r\n                [{sourse}, value]    -> [{_prop:\"color:$\"}, \"red\"]\r\n                [prop, value]        -> [\"color:$\", \"red\"]\r\n                prop                 ->  \"color:$\"\r\n            */\r\n\r\n            const attrElseFunc = target._else\r\n\r\n            if (!is.func(attrElseFunc)) return\r\n\r\n            let result = attrElseFunc({ style, token, states });\r\n\r\n            if (is.arr(result)) {\r\n                let [src, val] = result\r\n\r\n                if (is.obj(src)) {\r\n                    source = src\r\n                }\r\n                else {\r\n                    source = { _prop: src };\r\n                }\r\n                value = val || style;\r\n            }\r\n            else if (is.obj(result)) {\r\n                source = result;\r\n                value = style;\r\n            }\r\n            else {\r\n                source = { _prop: result };\r\n                value = style;\r\n            }\r\n        }\r\n        \r\n\r\n        if (!source) return;\r\n\r\n        if (value) {\r\n            if (is.func(source)) {\r\n                declaration = source\r\n            }\r\n            else {\r\n                declaration = source._prop\r\n            }\r\n\r\n            values = this.parseValue.parse(value, source);\r\n\r\n            if (!values) return null;\r\n        }\r\n        else {\r\n            declaration = source._one || source;\r\n        }\r\n\r\n        if (!declaration || is.obj(declaration)) return null\r\n\r\n        \r\n        if (is.str(declaration)) {\r\n            declaration = declaration.trim()\r\n        }\r\n\r\n        return {\r\n            src:    source,\r\n            path:   path,\r\n            prop:   declaration,\r\n            values: values,\r\n            rawVal: value,\r\n            val:    values ? values.map((e) => e.val).join(source._join || ' ') : null,\r\n            unit:   source._unit || '',\r\n            join:   source._join || ' ',\r\n            important,\r\n        };\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export function CreateStylesParser(ctx) {\r\n\r\n//     const parseValue = CreateValueParser(ctx)\r\n//     const parseRule = CreateRuleParser(ctx)\r\n\r\n//     return function(style, attr, token, states) {\r\n\r\n//         let object = ctx.attr[attr] || ctx.class;\r\n//         let property = null;\r\n//         let values = null;\r\n//         let important = false;\r\n\r\n//         if (style.includes(\"!\")) {\r\n//             style = style.replace(/!/g, '');\r\n//             important = true\r\n//         }\r\n\r\n//         let { source, path, value } = parseRule(style, object);\r\n\r\n//         if (!source && attr !== 'class') {\r\n//             /*\r\n//                 [{sourse}, [values]]\r\n//                 [prop, [values]]\r\n//                 [{sourse}, values]\r\n//                 [prop, values]\r\n//                 prop\r\n//             */\r\n//             let _else = object._else?.({style, token, states})\r\n\r\n//             if (is.arr(_else)) {\r\n//                 let [s, v] = _else || [null, null];\r\n//                 source = is.obj(s) ? s : { _prop: s };\r\n//                 value = v || style;\r\n//             }\r\n//             else if (is.obj(_else)) {\r\n//                 source = _else;\r\n//                 value = style;\r\n//             }\r\n//             else {\r\n//                 source = { _prop: _else };\r\n//                 value = style;\r\n//             }\r\n//         }\r\n\r\n//         if (!source) return;\r\n\r\n//         if (value) {\r\n//             property = source._prop;\r\n//             values = parseValue(value, source);\r\n\r\n//             if (!values) {\r\n//                 return null\r\n//             }\r\n//         } else {\r\n//             property = source._one || source;\r\n//         }\r\n\r\n//         if (!property || is.obj(property)) {\r\n//             return null;\r\n//         }\r\n\r\n//         return {\r\n//             src: source,\r\n//             path: path,\r\n//             prop: property,\r\n//             values: values,\r\n//             rawVal: value,\r\n//             val: values?.map((e) => e.val).join(source._join || ' ') || null,\r\n//             unit: source._unit || '',\r\n//             join: source._join || ' ',\r\n//             important\r\n//         };\r\n//     }\r\n// }\r\n", "import { is } from './check-type.js';\r\nimport { escape } from '../helpers/escape.js'\r\n// import { parser } from './parser/index.js';\r\n\r\n\r\n\r\nexport function createRule(STRUCT) {\r\n    // const STRUCT = parser(token, attr);\r\n    let IS_MEDIA = false\r\n    \r\n    if (!STRUCT) return null;\r\n    \r\n    const MEDIA = [];\r\n    const DECLARED = [];\r\n\r\n    if (STRUCT.states) {\r\n        for (let i = STRUCT.states.length - 1; i >= 0; i--) {\r\n            const state = STRUCT.states[i];\r\n            if (state.type === 'pseudo') {\r\n                if (is.func(state.val)) {\r\n                    STRUCT.selector = state.val(STRUCT.selector);\r\n                }\r\n                else if (state.val?.includes('$')) {\r\n                    STRUCT.selector = state.val.replace('$', STRUCT.selector);\r\n                }\r\n                else {\r\n                    STRUCT.selector += state.val;\r\n                }\r\n                \r\n            }\r\n            else if (state.type === 'media') {\r\n                MEDIA.push(state);\r\n                IS_MEDIA = true\r\n            }\r\n        }\r\n    }\r\n\r\n    if (STRUCT.extra && is.str(STRUCT.extra)) {\r\n        STRUCT.selector = STRUCT.extra.replace(/\\$/g, STRUCT.selector )\r\n    }\r\n\r\n    for (let rule of STRUCT.styles) {\r\n        let style = rule.prop;\r\n        \r\n\r\n        let imp = rule.important ? \"!important\" : \"\";\r\n\r\n        \r\n\r\n        if (is.func(rule.prop)) {\r\n            style = rule.prop(rule) || '';\r\n\r\n            if (!style) return;\r\n\r\n            if (is.arr(style)) {\r\n                rule.values = style[1]\r\n                style = style[0]\r\n            }\r\n\r\n            if (is.obj(style)) {\r\n                for (const key in style) {\r\n                    if (key[0] == \"_\") {\r\n                        rule[key.slice(1)] = style[key]\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                rule.prop = style;\r\n            }\r\n        }\r\n\r\n        // console.log(rule);\r\n\r\n        const re = {\r\n            group: /\\$(\\d+)?/g,\r\n            space: /^\\s*(.+?):\\s*/\r\n        }\r\n\r\n        \r\n\r\n        function replaceDynamic(_, group) {\r\n            if (!group) return rule.val || rule.rawVal || rule.prop;\r\n\r\n            let vals = rule.values[group - 1] ?? rule.values[0]\r\n            let unit = rule.unit?.[group - 1] ?? rule.unit?.[0] ?? rule.unit\r\n\r\n            return vals.val || vals.raw || (+vals ? vals + (unit || \"\") : vals)\r\n        }\r\n\r\n        if (rule.values) {\r\n            style = rule.prop.replace(re.group, replaceDynamic);\r\n        }\r\n        else {\r\n            style = style._one || style\r\n        }\r\n\r\n        if (!style || !is.str(style)) return;\r\n\r\n        \r\n\r\n        style = style\r\n            .replace(/([^:]+):([^;]+);?/g, (_, prop, val) => {\r\n                    _ = imp\r\n                    prop = prop.trim()\r\n                    val = val.trim()\r\n                    return `${prop}:${val}${_ ? \" !important\" : \"\"};`\r\n                }\r\n            )\r\n            .slice(0, -1)\r\n           \r\n        // DECLARED.push(style.replace(/(?<!\\\\)_/g, ' '));\r\n        DECLARED.push(escape(style, \"_\").replace(\" \"));\r\n    }\r\n\r\n\r\n    return {\r\n        media: MEDIA.length ? MEDIA : null,\r\n        selector: STRUCT.selector,\r\n        styles: DECLARED,\r\n\r\n        css() {\r\n            return `${STRUCT.selector}{${this.styles.join(\";\")}}`\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// style = style.replace(/(?<!;\\s*);(?![^()]*\\))|(?<!;)$/g, imp ? ` ${imp};` : \";\")\r\n\r\n\r\n\r\n\r\n    // const STYLE = DECLARED\r\n    // .join(';')\r\n    // .replace(/(?<!\\\\)_/g, ' ');\r\n\r\n\r\n\r\n    // return [MEDIA, `${STRUCT.selector}{${STYLE}}`];\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let unit = is.arr(rule.unit) ? rule.unit : [rule.unit]\r\n            \r\n            \r\n            // // console.log(vals);\r\n\r\n            \r\n            // if (is.arr(rule.unit) && +vals.raw) {\r\n            //     return vals.raw + (rule.unit[group - 1] || \"\")\r\n            // }", "import formatSelector from '../format-selector.js';\r\n\r\nimport { is } from '../check-type.js';\r\nimport { StatesParser } from './parse-states.js';\r\nimport { StylesParser } from './parse-styles.js';\r\nimport { createRule   } from '../create-rule.js';\r\nimport { escape } from '../../helpers/escape.js';\r\n\r\n\r\nexport class Parser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n        this.parseStates = new StatesParser(ctx)\r\n        this.parseStyles = new StylesParser(ctx)\r\n    }\r\n\r\n    parse(token = '', attr = 'class') {\r\n        // let [styles, ...states] = token.split(/(?<!\\\\):/g).reverse();\r\n        let [styles, ...states] = escape(token, \":\").split().reverse()\r\n        let selector = formatSelector(token, attr);\r\n        let rawSelector = selector;\r\n\r\n        states = states.map((e) => this.parseStates.parse(e, attr, token));\r\n        // styles = styles.split(/(?<!\\\\);/g);\r\n        styles = escape(styles, \";\").split()\r\n        styles = styles.map((e) => this.parseStyles.parse(e, attr, token, states));\r\n        styles = styles.filter((e) => e);\r\n\r\n        if (!states.length) {\r\n            states = null;\r\n        }\r\n\r\n        if (styles.length) {\r\n            const EXTRA_SELECTOR = (styles[0].src || 0)._selector || null;\r\n\r\n            // if (EXTRA_SELECTOR && is.str(EXTRA_SELECTOR)) {\r\n            //     selector = EXTRA_SELECTOR.replace(/\\$/g, selector);\r\n            // }\r\n\r\n            return {\r\n                states,\r\n                styles,\r\n                attr,\r\n                selector,\r\n                rawSelector,\r\n                token,\r\n                extra: EXTRA_SELECTOR,\r\n\r\n                create() {\r\n                    return createRule(this);\r\n                },\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n", "export function CreateStore() {\r\n    let STYLE_STORE = Object.create(null);\r\n    let ATTRS_STORE = Object.create(null);\r\n    let MEDIA_STORE = Object.create(null);\r\n    let CSS_STORE   = Object.create(null);\r\n\r\n    CSS_STORE.MEDIA = {};\r\n\r\n    return {\r\n        STYLE_STORE,\r\n        ATTRS_STORE,\r\n        MEDIA_STORE,\r\n        CSS_STORE,\r\n    }\r\n}\r\n", "export function CreateAttrFlex() {\r\n    const c_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        sb: 'space-between',\r\n        sa: 'space-around',\r\n        se: 'space-evenly',\r\n    };\r\n    const i_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        st: 'stretch',\r\n    };\r\n    \r\n    return {\r\n        _name: 'flex',\r\n        _using: \"display:flex\",\r\n    \r\n        _else: function (e) {\r\n            if (!isNaN(+e.style[0])) {\r\n                return { _prop: 'gap:$', _unit: 'px' };\r\n            }\r\n        },\r\n        col: {\r\n            _one: 'flex-direction:column',\r\n            start: 'flex-direction:column;align-items:flex-start',\r\n            center: 'flex-direction:column;align-items:center',\r\n            end: 'flex-direction:column;align-items:flex-end',\r\n            rev: 'flex-direction:column-reverse',\r\n        },\r\n        row: {\r\n            _one: 'flex-direction:row',\r\n            start: 'flex-direction:row;justify-content:flex-start',\r\n            center: 'flex-direction:row;justify-content:center',\r\n            end: 'flex-direction:row;justify-content:flex-end',\r\n            rev: 'flex-direction:row-reverse',\r\n        },\r\n        order: { _prop: 'order:$1' },\r\n        basis: { _prop: 'flex-basis:$' },\r\n        center: 'justify-content:center;align-items:center',\r\n        space: 'justify-content:space-between;align-items:center',\r\n        evenly: 'justify-content: space-evenly;align-items:center',\r\n        around: 'justify-content: space-around;align-items:center',\r\n        stretch: 'align-items:stretch',\r\n        grow: { _one: 'flex-grow:1', _prop: 'flex-grow:$' },\r\n        shrink: { _one: 'flex-shrink:1', _prop: 'flex-shrink:$' },\r\n    \r\n        start:  \"justify-content: flex-start\",\r\n        end:    \"justify-content: flex-end\",\r\n        top:    \"align-items: flex-start\",\r\n        bottom: \"align-items: flex-end\",\r\n    \r\n        wrap: {\r\n            _one: 'flex-wrap:wrap',\r\n            _prop: 'flex-wrap:$',\r\n            _vals: { rev: 'wrap-reverse' },\r\n        },\r\n        jc: {\r\n            _prop: 'justify-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ji: {\r\n            _prop: 'justify-items:$',\r\n            _vals: i_vals,\r\n        },\r\n        ac: {\r\n            _prop: 'align-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ai: {\r\n            _prop: 'align-items:$',\r\n            _vals: i_vals,\r\n        },\r\n    };\r\n    \r\n}", "export function CreateAttrGrid() {\r\n    const c_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        sb: 'space-between',\r\n        sa: 'space-around',\r\n        se: 'space-evenly',\r\n    };\r\n    const i_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        st: 'stretch',\r\n    };\r\n    \r\n    return {\r\n        _name: 'grid',\r\n        _using: \"display:grid\",\r\n    \r\n        _else: function (e) {\r\n            if (+e.style[0]) {\r\n                return [{ _prop: 'gap:$', _unit: 'px' }];\r\n            }\r\n        },\r\n        cols: {\r\n            _prop: 'grid-template-columns:repeat($,1fr)',\r\n        },\r\n        rows: {\r\n            _prop: 'grid-template-rows:repeat($,1fr)',\r\n        },\r\n        jc: {\r\n            _prop: 'justify-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ji: {\r\n            _prop: 'justify-items:$',\r\n            _vals: i_vals,\r\n        },\r\n        ac: {\r\n            _prop: 'align-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ai: {\r\n            _prop: 'align-items:$',\r\n            _vals: i_vals,\r\n        },\r\n    };\r\n    \r\n}", "export function CreateAttrText() {\r\n    return {\r\n        _name: \"text\",\r\n        _else: function ({ style, states, token }) {\r\n            if (style.includes('/')) {\r\n                let [v1, v2, v3] = style.split('/');\r\n                if (+v1[0] && v3) {\r\n                    return [\r\n                        {\r\n                            _prop: `font-size:$1;font-weight:$2;line-height:$3`,\r\n                            _unit: ['px', \"\", \"px\"]\r\n                        },\r\n                        [v1, v2, v3],\r\n                    ];\r\n                }\r\n                if (+v1[0]) {\r\n                    return [\r\n                        {\r\n                            _prop: `font-size:$;font-weight:${v2}`,\r\n                            _unit: 'px'\r\n                        },\r\n                        [v1],\r\n                    ];\r\n                }\r\n            } else {\r\n                if (+style[0]) {\r\n                    return { _prop: 'font-size:$', _unit: 'px' }\r\n                }\r\n            }\r\n    \r\n            return 'color:$'\r\n        },\r\n    \r\n        100: 'font-weight:100',\r\n        200: 'font-weight:200',\r\n        300: 'font-weight:300',\r\n        400: 'font-weight:400',\r\n        500: 'font-weight:500',\r\n        600: 'font-weight:600',\r\n        700: 'font-weight:700',\r\n        800: 'font-weight:800',\r\n        900: 'font-weight:900',\r\n        \r\n        nowrap: 'white-space: nowrap',\r\n        \r\n        light:     'font-weight:300',\r\n        regular:   'font-weight:400',\r\n        medium:    'font-weight:500',\r\n        semibold:  'font-weight:600',\r\n        bold:      'font-weight:700',\r\n        extrabold: 'font-weight:800',\r\n    \r\n        tp:        'color:transparent!important',\r\n        thin:      'font-weight:lighter',\r\n        normal:    'font-weight:normal',\r\n        bolder:    'font-weight:bolder',\r\n        italic:    'font-style: italic',\r\n        delete:    'text-decoration-line:line-through',\r\n        line:      'text-decoration-line:underline',\r\n        overline:  'text-decoration-line:overline',\r\n        up:        'text-transform:uppercase',\r\n        low:       'text-transform:lowercase',\r\n        cap:       'text-transform:capitalize',\r\n        center:    'text-align:center',\r\n        left:      'text-align:left',\r\n        right:     'text-align:right',\r\n        justify:   'text-align:justify',\r\n    \r\n        mono:  'font-family:var(--font-mono)',\r\n        serif: 'font-family:var(--font-serif)',\r\n        sans:  'font-family:var(--font-sans)',\r\n    \r\n        vertical: 'writing-mode:vertical-lr',\r\n        wrap: 'word-wrap:break-word',\r\n        dots: 'overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%',\r\n        cols:   { _prop: 'columns:$'        },\r\n        lh:     { _prop: 'line-height:$'    },\r\n        wg:     { _prop: 'font-weight:$'    },\r\n        font:   { _prop: 'font-family:$'    },\r\n        align:  { _prop: 'vertical-align:$' },\r\n        space:  { _prop: 'white-space:$'    },\r\n        shadow: {\r\n            _one: 'text-shadow:3px 3px 2px #0000004d',\r\n            _prop: 'text-shadow:$',\r\n            _unit: 'px',\r\n        },\r\n        stroke: {\r\n            _prop: '-webkit-text-stroke:$',\r\n            _unit: 'px',\r\n        },\r\n        break: {\r\n            _prop: 'word-break:$',\r\n            _vals: {\r\n                all: 'break-all',\r\n                keep: 'keep-all'\r\n            }\r\n        },\r\n    };\r\n    \r\n}", "import { CreateAttrFlex } from \"./flex.js\";\r\nimport { CreateAttrGrid } from \"./grid.js\";\r\nimport { CreateAttrText } from \"./text.js\";\r\n\r\nexport function CreateAttrs() {\r\n    return {\r\n        flex: CreateAttrFlex(),\r\n        grid: CreateAttrGrid(),\r\n        text: CreateAttrText(),\r\n    }\r\n}", "import { CreateAttrText } from \"./attrs/text.js\";\r\n\r\n\r\nexport function CreateClasses(){\r\n\r\n    const w_vals = {\r\n        full: '100%',\r\n        half: '50%',\r\n        min: 'min-content',\r\n        fit: 'fit-content',\r\n        max: 'max-content',\r\n        screen: '100vw',\r\n    };\r\n    const h_vals = {\r\n        full: '100%',\r\n        half: '50%',\r\n        min: 'min-content',\r\n        fit: 'fit-content',\r\n        max: 'max-content',\r\n        screen: '100vh',\r\n    };\r\n    const c_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        sb: 'space-between',\r\n        sa: 'space-around',\r\n        se: 'space-evenly',\r\n    };\r\n    const i_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        st: 'stretch',\r\n    };\r\n    \r\n    const classes = {\r\n        m: {\r\n            _prop: 'margin:$',\r\n            _unit: 'px',\r\n        },\r\n        my: {\r\n            _prop: 'margin-top:$1;margin-bottom:$2',\r\n            _unit: 'px',\r\n        },\r\n        mx: {\r\n            _prop: 'margin-left:$1;margin-right:$2',\r\n            _unit: 'px',\r\n        },\r\n        mt: {\r\n            _prop: 'margin-top:$',\r\n            _unit: 'px',\r\n        },\r\n        mr: {\r\n            _prop: 'margin-right:$',\r\n            _unit: 'px',\r\n        },\r\n        mb: {\r\n            _prop: 'margin-bottom:$',\r\n            _unit: 'px',\r\n        },\r\n        ml: {\r\n            _prop: 'margin-left:$',\r\n            _unit: 'px',\r\n        },\r\n        ms: {\r\n            _prop: 'margin-inline-start:$',\r\n            _unit: 'px',\r\n        },\r\n        me: {\r\n            _prop: 'margin-inline-end:$',\r\n            _unit: 'px',\r\n        },\r\n        center: 'margin:auto',\r\n        p: {\r\n            _prop: 'padding:$',\r\n            _unit: 'px',\r\n        },\r\n        py: {\r\n            _prop: 'padding-top:$1;padding-bottom:$2',\r\n            _unit: 'px',\r\n        },\r\n        px: {\r\n            _prop: 'padding-left:$1;padding-right:$2',\r\n            _unit: 'px',\r\n        },\r\n        pt: {\r\n            _prop: 'padding-top:$',\r\n            _unit: 'px',\r\n        },\r\n        pr: {\r\n            _prop: 'padding-right:$',\r\n            _unit: 'px',\r\n        },\r\n        pb: {\r\n            _prop: 'padding-bottom:$',\r\n            _unit: 'px',\r\n        },\r\n        pl: {\r\n            _prop: 'padding-left:$',\r\n            _unit: 'px',\r\n        },\r\n        ps: {\r\n            _prop: 'padding-inline-start:$',\r\n            _unit: 'px',\r\n        },\r\n        pe: {\r\n            _prop: 'padding-inline-end:$',\r\n            _unit: 'px',\r\n        },\r\n        space: {\r\n            _prop: 'margin-left:$',\r\n            _selector: '$>*+*',\r\n            _unit: 'px',\r\n            x: { _prop: 'margin-left:$', _selector: '$>*+*', _unit: 'px' },\r\n            y: { _prop: 'margin-top:$', _selector: '$>*+*', _unit: 'px' },\r\n        },\r\n        b: {\r\n            _prop: 'border-width:$',\r\n            _unit: 'px',\r\n        },\r\n        bt: {\r\n            _prop: 'border-top-width:$',\r\n            _unit: 'px',\r\n        },\r\n        br: {\r\n            _prop: 'border-right-width:$',\r\n            _unit: 'px',\r\n        },\r\n        bb: {\r\n            _prop: 'border-bottom-width:$',\r\n            _unit: 'px',\r\n        },\r\n        bl: {\r\n            _prop: 'border-left-width:$',\r\n            _unit: 'px',\r\n        },\r\n        bc: {\r\n            _prop: 'border-color:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        bs: {\r\n            _prop: 'border-style:$',\r\n        },\r\n        border: {\r\n            _one: 'border:1px solid',\r\n            _prop: 'border:$',\r\n            _unit: 'px',\r\n        },\r\n        outline: {\r\n            _prop: 'outline:$',\r\n            _unit: 'px',\r\n        },\r\n        fill: {\r\n            _prop: 'fill:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        stroke: {\r\n            _prop: 'stroke:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        unappearance: 'appearance:none',\r\n        unapp: 'appearance:none',\r\n        scale: {\r\n            _prop: 'scale:$',\r\n        },\r\n        rotate: {\r\n            _prop: 'rotate:$',\r\n            _unit: 'deg',\r\n        },\r\n        translate: {\r\n            _prop: 'translate:$',\r\n            _unit: 'px',\r\n        },\r\n        skew: {\r\n            _prop: 'transform:skew($)',\r\n            _unit: 'deg',\r\n            _join: ',',\r\n            x: {\r\n                _prop: 'transform:skewX($)',\r\n                _unit: 'deg',\r\n            },\r\n            y: {\r\n                _prop: 'transform:skewY($)',\r\n                _unit: 'deg',\r\n            },\r\n        },\r\n        flip: {\r\n            _one: 'scale:-1 -1',\r\n            _prop: 'scale:$',\r\n            _vals: {\r\n                x: '-1 1',\r\n                y: '1 -1',\r\n            },\r\n        },\r\n        clamp: {\r\n            _prop: 'overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:$',\r\n        },\r\n        inset: {\r\n            _prop: 'inset:$',\r\n            x: { _prop: 'left:$;right:$' },\r\n            y: { _prop: 'top:$;bottom:$' },\r\n        },\r\n        start: { _prop: 'inset-inline-start:$' },\r\n        end: { _prop: 'inset-inline-end:$' },\r\n        tf: {\r\n            _prop: 'transform:$',\r\n            \r\n            scale: {\r\n                _prop: 'transform:scale($)',\r\n                _join: ',',\r\n                '3d': {\r\n                    _prop: 'transform:scale3d($)',\r\n                    _join: ',',\r\n                },\r\n                x: {\r\n                    _prop: 'transform:scaleX($)',\r\n                },\r\n                y: {\r\n                    _prop: 'transform:scaleY($)',\r\n                },\r\n                z: {\r\n                    _prop: 'transform:scalez($)',\r\n                },\r\n            },\r\n    \r\n            rotate: {\r\n                _prop: 'transform:rotate($)',\r\n                _unit: 'deg',\r\n                '3d': {\r\n                    _prop: 'transform:rotate3d($)',\r\n                    _join: ',',\r\n                },\r\n                x: {\r\n                    _prop: 'transform:rotateX($)',\r\n                    _unit: 'deg',\r\n                },\r\n                y: {\r\n                    _prop: 'transform:rotateY($)',\r\n                    _unit: 'deg',\r\n                },\r\n                z: {\r\n                    _prop: 'transform:rotateZ($)',\r\n                    _unit: 'deg',\r\n                },\r\n            },\r\n    \r\n            translate: {\r\n                _prop: 'transform:translate($)',\r\n                _unit: 'px',\r\n                _join: ',',\r\n                '3d': {\r\n                    _prop: 'transform:translate3d($)',\r\n                    _unit: 'px',\r\n                    _join: ',',\r\n                },\r\n                x: {\r\n                    _prop: 'transform:translateX($)',\r\n                    _unit: 'px',\r\n                },\r\n                y: {\r\n                    _prop: 'transform:translateY($)',\r\n                    _unit: 'px',\r\n                },\r\n                z: {\r\n                    _prop: 'transform:translateZ($)',\r\n                    _unit: 'px',\r\n                },\r\n            },\r\n    \r\n            skew: {\r\n                _prop: 'transform:skew($)',\r\n                _unit: 'deg',\r\n                x: {\r\n                    _prop: 'transform:skewX($)',\r\n                    _unit: 'deg',\r\n                },\r\n                y: {\r\n                    _prop: 'transform:skewY($)',\r\n                    _unit: 'deg',\r\n                },\r\n            }\r\n        },\r\n        w: {\r\n            _prop: 'width:$',\r\n            _vals: w_vals,\r\n            _unit: 'px',\r\n        },\r\n        h: {\r\n            _prop: 'height:$',\r\n            _vals: h_vals,\r\n            _unit: 'px',\r\n        },\r\n        sq: {\r\n            _prop: 'width:$1;height:$2',\r\n            _vals: { full: '100%' },\r\n            _unit: 'px',\r\n        },\r\n        max: {\r\n            w: {\r\n                _prop: 'max-width:$',\r\n                _vals: w_vals,\r\n                _unit: 'px',\r\n            },\r\n            h: {\r\n                _prop: 'max-height:$',\r\n                _vals: h_vals,\r\n                _unit: 'px',\r\n            },\r\n        },\r\n        min: {\r\n            w: {\r\n                _prop: 'min-width:$',\r\n                _vals: w_vals,\r\n                _unit: 'px',\r\n            },\r\n            h: {\r\n                _prop: 'min-height:$',\r\n                _vals: h_vals,\r\n                _unit: 'px',\r\n            },\r\n        },\r\n        minW: {\r\n            _prop: 'min-width:$',\r\n            _vals: w_vals,\r\n            _unit: 'px',\r\n        },\r\n        minH: {\r\n            _prop: 'min-height:$',\r\n            _vals: h_vals,\r\n            _unit: 'px',\r\n        },\r\n        maxW: {\r\n            _prop: 'max-width:$',\r\n            _vals: w_vals,\r\n            _unit: 'px',\r\n        },\r\n        maxH: {\r\n            _prop: 'max-height:$',\r\n            _vals: h_vals,\r\n            _unit: 'px',\r\n        },\r\n        d: {\r\n            _prop: 'display:$',\r\n            _vals: {\r\n                inblock: 'inline-block',\r\n                inflex: 'inline-flex',\r\n                ingrid: 'inline-grid',\r\n            },\r\n        },\r\n        table: {\r\n            _one: 'display:table',\r\n            _prop: 'display:table-$',\r\n        },\r\n        inline: 'display:inline',\r\n        block: 'display:block',\r\n        inblock: 'display:inline-block',\r\n        inflex: 'display:inline-flex',\r\n        ingrid: 'display:inline-grid',\r\n        hide: 'display:none',\r\n        hidden: 'display:none',\r\n        upper: 'text-transform:uppercase',\r\n        uppercase: 'text-transform:uppercase',\r\n        lower: 'text-transform:lowercase',\r\n        lowercase: 'text-transform:lowercase',\r\n        capit: 'text-transform:capitalize',\r\n        capitalize: 'text-transform:capitalize',\r\n        pos: {\r\n            _prop: 'position:$',\r\n        },\r\n        static: 'position:static',\r\n        abs: 'position:absolute',\r\n        absolute: 'position:absolute',\r\n        rel: 'position:relative',\r\n        relative: 'position:relative',\r\n        sticky: 'position:sticky',\r\n        fixed: 'position:fixed',\r\n        r: {\r\n            _prop: 'border-radius:$',\r\n            _unit: 'px',\r\n        },\r\n        round: {\r\n            _one: 'border-radius:9999px',\r\n            _prop: 'border-radius:$',\r\n            _unit: 'px',\r\n        },\r\n        sharp: 'border-radius:0',\r\n        transition: {\r\n            _prop: 'transition:$',\r\n            _unit: 'ms',\r\n        },\r\n        time: {\r\n            _prop: 'transition:$',\r\n            _unit: 'ms',\r\n        },\r\n        select: {\r\n            _prop: 'user-select:$',\r\n        },\r\n        fit: {\r\n            _prop: 'object-fit:$',\r\n            top: 'object-position:top',\r\n            bottom: 'object-position:bottom',\r\n            center: 'object-position:center',\r\n            left: {\r\n                _one: 'object-position:left',\r\n                _prop: 'object-position:left $',\r\n            },\r\n            right: {\r\n                _one: 'object-position:right',\r\n                _prop: 'object-position:right $',\r\n            },\r\n        },\r\n        bg: {\r\n            _prop: 'background:$',\r\n            tp: 'background-color:transparent',\r\n            cc: 'background-color:currentcolor',\r\n            f: 'background-color:#fff',\r\n            0: 'background-color:#000',\r\n            fixed: 'background-attachment:fixed',\r\n            local: 'background-attachment:local',\r\n            scroll: 'background-attachment:scroll',\r\n            clip: {\r\n                border: 'background-clip:border-box',\r\n                padding: 'background-clip:padding-box',\r\n                content: 'background-clip:content-box',\r\n                text: 'background-clip:text',\r\n            },\r\n            origin: {\r\n                border: 'background-origin:border-box',\r\n                padding: 'background-origin:padding-box',\r\n                content: 'background-origin:content-box',\r\n            },\r\n            pos: {\r\n                _prop: 'background-position:$',\r\n                x: { _prop: 'background-position-x:$' },\r\n                y: { _prop: 'background-position-y:$' },\r\n            }\r\n        },\r\n        bgp: {\r\n            _prop: 'background-position:$',\r\n            x: { _prop: 'background-position-x:$' },\r\n            y: { _prop: 'background-position-y:$' },\r\n        },\r\n        c: {\r\n            _prop: 'color:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        accent: {\r\n            _prop: 'accent-color:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        caret: {\r\n            _prop: 'caret-color:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        over: {\r\n            _prop: 'overflow:$',\r\n            x: {\r\n                _prop: 'overflow-x:$',\r\n            },\r\n            y: {\r\n                _prop: 'overflow-y:$',\r\n            },\r\n        },\r\n        snap: {\r\n            x: 'scroll-snap-type:x mandatory',\r\n            y: 'scroll-snap-type:y mandatory',\r\n            start: 'scroll-snap-align:start',\r\n            center: 'scroll-snap-align:center',\r\n            end: 'scroll-snap-align:end',\r\n            stop: 'scroll-snap-stop: always',\r\n        },\r\n        shadow: {\r\n            box: {\r\n                _prop: 'box-shadow:$',\r\n                _one: 'box-shadow:3px 4px 3px #0000004d',\r\n                _unit: 'px',\r\n            },\r\n            text: {\r\n                _prop: 'text-shadow:$',\r\n                _one: 'text-shadow:3px 4px 3px #0000004d',\r\n                _unit: 'px',\r\n            },\r\n        },\r\n        cursor: {\r\n            _prop: 'cursor:$', \r\n        },\r\n        resize: {\r\n            _prop: 'resize:$',\r\n            _vals: {\r\n                x: 'horizontal',\r\n                y: 'vertical',\r\n            },\r\n        },\r\n        top: {\r\n            _prop: 'top:$',\r\n            _unit: 'px',\r\n        },\r\n        right: {\r\n            _prop: 'right:$',\r\n            _unit: 'px',\r\n        },\r\n        bottom: {\r\n            _prop: 'bottom:$',\r\n            _unit: 'px',\r\n        },\r\n        left: {\r\n            _prop: 'left:$',\r\n            _unit: 'px',\r\n        },\r\n        ratio: {\r\n            _prop({ src, rawVal, val }) {\r\n                return `aspect-ratio:${\r\n                    +rawVal[0] ? rawVal.split(\"/\").join(\" / \") : val\r\n                }`;\r\n            },\r\n            _vals: {\r\n                sqr: '1 / 1',\r\n                vid: '16 / 9',\r\n            },\r\n        },\r\n        box: {\r\n            _prop: 'box-sizing:$',\r\n            _vals: {\r\n                content: 'content-box',\r\n                border: 'border-box',\r\n            },\r\n            decoration: { _prop: 'box-decoration-break:$' },\r\n        },\r\n    \r\n        float: {\r\n            _prop: 'float:$',\r\n        },\r\n        clear: {\r\n            _prop: 'clear:$',\r\n            _vals: {\r\n                x: 'horizontal',\r\n                y: 'vertical',\r\n            },\r\n        },\r\n        z: {\r\n            _prop: 'z-index:$',\r\n        },\r\n        visible: 'visibility:visible',\r\n        invisible: 'visibility:hidden',\r\n        collapse: 'visibility:collapse',\r\n        opacity: {\r\n            _prop: ({ val }) => `opacity:${val > 1 ? val / 100 : val}`,\r\n        },\r\n        blend: {\r\n            _prop: 'mix-blend-mode:$',\r\n        },\r\n        hue: {\r\n            _prop: 'filter:hue-rotate($)',\r\n            _unit: 'deg',\r\n        },\r\n        invert: {\r\n            _one: 'filter:invert(1)',\r\n            _prop: 'filter:invert($)',\r\n        },\r\n        blur: {\r\n            _prop: 'filter:blur($)',\r\n            _unit: 'px',\r\n        },\r\n        brightness: {\r\n            _prop: 'filter:brightness($)',\r\n        },\r\n        contrast: {\r\n            _prop: 'filter:contrast($)',\r\n        },\r\n        saturate: {\r\n            _prop: 'filter:saturate($)',\r\n        },\r\n        grayscale: {\r\n            _prop: 'filter:grayscale($)',\r\n            _unit: '%',\r\n        },\r\n        sepia: {\r\n            _prop: 'filter:sepia($)',\r\n            _unit: '%',\r\n        },\r\n        isolate: 'isolation:isolate',\r\n        isolation: { _prop: 'isolation:$' },\r\n        pointer: 'cursor:pointer',\r\n        ws: {\r\n            _prop: 'white-space:$',\r\n        },\r\n        list: {\r\n            _prop: 'list-style:$',\r\n            item: 'display:list-item',\r\n        },\r\n        spacing: {\r\n            _prop: 'letter-spacing:$',\r\n            _unit: 'px',\r\n        },\r\n        fs: {\r\n            _prop: 'font-size:$',\r\n            _unit: 'px',\r\n        },\r\n        fsz: {\r\n            _prop: 'font-size:$',\r\n            _unit: 'px',\r\n        },\r\n        fst: {\r\n            _prop: 'font-style:$',\r\n        },\r\n        italic: 'font-style:italic',\r\n        fw: {\r\n            _prop: 'font-weight:$',\r\n        },\r\n        extrathin: 'font-weight:100',\r\n        thin: 'font-weight:200',\r\n        light: 'font-weight:300',\r\n        regular: 'font-weight:400',\r\n        medium: 'font-weight:500',\r\n        semibold: 'font-weight:600',\r\n        bold: 'font-weight:700',\r\n        extrabold: 'font-weight:800',\r\n        fv: {\r\n            _prop: 'font-variant:$',\r\n        },\r\n        ff: {\r\n            _prop: 'font-family:$',\r\n            _vals: {\r\n                sans: 'var(--font-sans)',\r\n                serif: 'var(--font-serif)',\r\n                mono: 'var(--font-mono)',\r\n            },\r\n        },\r\n        lh: {\r\n            _prop: 'line-height:$',\r\n        },\r\n        ta: {\r\n            _prop: 'text-align:$',\r\n        },\r\n        underline: 'text-decoration:underline',\r\n        td: {\r\n            _prop: 'text-decoration:$',\r\n            _vals: {\r\n                line: 'underline',\r\n            },\r\n            _unit: 'px',\r\n        },\r\n        wb: {\r\n            _prop: 'word-break:$',\r\n            _vals: {\r\n                all: 'break-all',\r\n                keep: 'keep-all',\r\n            },\r\n        },\r\n        break: {\r\n            _prop: 'word-break:$',\r\n            _vals: {\r\n                all: 'break-all',\r\n                keep: 'keep-all',\r\n            },\r\n            after: { _prop: 'break-after:$' },\r\n            before: { _prop: 'break-before:$' },\r\n            inside: { _prop: 'break-inside:$' },\r\n        },\r\n        grad: {\r\n            _prop: 'background:linear-gradient($)',\r\n            _unit: 'deg',\r\n            _join: ',',\r\n        },\r\n        fullscreen: 'position:absolute;left:0;top:0;width:100%;height:100%',\r\n        flex: {\r\n            _one: 'display:flex',\r\n            _prop({ val, rawVal, src }) {\r\n                if (rawVal in src._vals) {\r\n                    return \"flex:\" + val\r\n                }\r\n                return \"gap:\" + val;\r\n            },\r\n            _vals: {\r\n                1: '1 1 0%',\r\n                auto: '1 1 auto',\r\n                initial: '0 1 auto',\r\n            },\r\n            _unit: 'px',\r\n            center: 'justify-content:center;align-items:center',\r\n            col: {\r\n                _one: 'flex-direction:column',\r\n                rev: 'flex-direction:column-reverse',\r\n            },\r\n            row: {\r\n                _one: 'flex-direction:row',\r\n                rev: 'flex-direction:row-reverse',\r\n            },\r\n            space: 'justify-content:space-between;align-items:center',\r\n            evenly: 'justify-content:space-evenly;align-items:center',\r\n            around: 'justify-content:space-around;align-items:center',\r\n            wrap: {\r\n                _one: 'flex-wrap:wrap',\r\n                rev: 'flex-wrap:wrap-reverse',\r\n            },\r\n            nowrap: 'flex-wrap:nowrap',\r\n            stretch: 'align-items:stretch',\r\n            start: {\r\n                _one: \"justify-content:flex-start\",\r\n                top: \"justify-content:flex-start;align-items:flex-start\",\r\n                center: \"justify-content:flex-start;align-items:center\",\r\n                bottom: \"justify-content:flex-start;align-items:flex-end\",\r\n            },\r\n            end: {\r\n                _one: \"justify-content:flex-end\",\r\n                top: \"justify-content:flex-end;align-items:flex-start\",\r\n                center: \"justify-content:flex-end;align-items:center\",\r\n                bottom: \"justify-content:flex-end;align-items:flex-end\",\r\n            },\r\n            top: {\r\n                _one:   \"align-items:flex-start\",\r\n                start: \"justify-content:flex-start;align-items:flex-start\",\r\n                center: \"justify-content:center;align-items:flex-start\",\r\n                end: \"justify-content:flex-end;align-items:flex-start\",\r\n            },\r\n            bottom: {\r\n                _one:   \"align-items:flex-end\",\r\n                start: \"justify-content:flex-start;align-items:flex-end\",\r\n                center: \"justify-content:center;align-items:flex-end\",\r\n                end: \"justify-content:flex-end;align-items:flex-end\",\r\n            },\r\n        },\r\n        col: {\r\n            _one: 'flex-direction:column',\r\n            rev: 'flex-direction:column-reverse',\r\n            _prop: 'grid-column:$',\r\n            span: {\r\n                _prop: 'grid-column:span $ / span $',\r\n                full: 'grid-column:1 / -1',\r\n            },\r\n            start: { _prop: 'grid-column-start:$' },\r\n            end: { _prop: 'grid-column-end:$' },\r\n        },\r\n        row: {\r\n            _one: 'flex-direction:row',\r\n            rev: 'flex-direction:row-reverse',\r\n            _prop: 'grid-row:$',\r\n            span: {\r\n                _prop: 'grid-row:span $ / span $',\r\n                full: 'grid-row:1 / -1',\r\n            },\r\n            start: { _prop: 'grid-row-start:$' },\r\n            end: { _prop: 'grid-row-end:$' },\r\n        },\r\n        flow: {\r\n            _prop: 'grid-auto-flow:$',\r\n            _vals: {\r\n                col: 'column',\r\n                'col-dense': 'column dense',\r\n                'row dense': 'row dense',\r\n            },\r\n        },\r\n        auto: {\r\n            cols: {\r\n                _prop: 'grid-auto-columns:$',\r\n                _vals: {\r\n                    min: 'min-content',\r\n                    max: 'max-content',\r\n                    fr: 'minmax(0,1fr)',\r\n                },\r\n            },\r\n            rows: {\r\n                _prop: 'grid-auto-rows:$',\r\n                _vals: {\r\n                    min: 'min-content',\r\n                    max: 'max-content',\r\n                    fr: 'minmax(0,1fr)',\r\n                },\r\n            },\r\n        },\r\n        gap: {\r\n            _prop: 'gap:$',\r\n            _unit: 'px',\r\n            x: {\r\n                _prop: 'column-gap:$',\r\n                _unit: 'px',\r\n            },\r\n            y: {\r\n                _prop: 'row-gap:$',\r\n                _unit: 'px',\r\n            },\r\n        },\r\n        jc: {\r\n            _prop: 'justify-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ji: {\r\n            _prop: 'justify-items:$',\r\n            _vals: i_vals,\r\n        },\r\n        js: {\r\n            _prop: 'justify-self:$',\r\n            _vals: i_vals,\r\n        },\r\n        ac: {\r\n            _prop: 'align-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ai: {\r\n            _prop: 'align-items:$',\r\n            _vals: i_vals,\r\n        },\r\n        as: {\r\n            _prop: 'align-self:$',\r\n            _vals: i_vals,\r\n        },\r\n        order: {\r\n            _prop: 'order:$',\r\n            _vals: {\r\n                first: '-9999',\r\n                last: '9999',\r\n                none: '0',\r\n            },\r\n        },\r\n        basis: {\r\n            _prop: 'flex-basis:$',\r\n        },\r\n        grow: {\r\n            _one: 'flex-grow:1',\r\n            _prop: 'flex-grow:$',\r\n        },\r\n        shrink: {\r\n            _one: 'flex-shrink:1',\r\n            _prop: 'flex-shrink:$',\r\n        },\r\n        grid: {\r\n            _one: 'display:grid',\r\n            cols: {\r\n                _prop: 'grid-template-columns:repeat($,1fr)',\r\n            },\r\n            rows: {\r\n                _prop: 'grid-template-rows:repeat($,1fr)',\r\n            },\r\n        },\r\n        sw: {\r\n            _prop: 'stroke-width: $',\r\n            _unit: 'px',\r\n        },\r\n        text: {\r\n            _prop: function({rawVal}){\r\n                console.log(rawVal);\r\n               \r\n                let [v1, v2, v3] = rawVal.split('/');\r\n    \r\n                if (+v1[0] && v3) {\r\n                        return [\r\n                            {\r\n                                _prop: `font-size:$1;font-weight:$2;line-height:$3`,\r\n                            },\r\n                            [v1, v2, v3]\r\n                        ];\r\n                }\r\n                if (+v1[0] && v2) {\r\n                    return [\r\n                        {\r\n                            _prop: `font-size:$1;font-weight:$2`,\r\n                        },\r\n                        [v1, v2]\r\n                    ];\r\n                }\r\n                if (+v1[0]) {\r\n                    return 'font-size:$1'\r\n                }\r\n                \r\n        \r\n                return 'color:$'\r\n            },\r\n            _unit: [\"px\", \"\", \"px\"],\r\n            ...CreateAttrText()\r\n        }\r\n    };\r\n    \r\n    classes.object = classes.fit;\r\n    classes.overflow = classes.over;\r\n    classes.op = classes.opacity;\r\n\r\n    return classes\r\n}\r\n\r\n\r\n\r\n// export default classes;\r\n", "export function CreateColors() {\r\n    return {\r\n        black:  { def: \"#000\" },\r\n        white:  { def: \"#fff\" },\r\n        gray:   { def: \"#6b7280\", 1: \"#f3f4f6\", 2: \"#d1d5db\", 3: \"#374151\", 4: \"#111827\" }, \r\n        red:    { def: \"#ef4444\", 1: \"#fee2e2\", 2: \"#fca5a5\", 3: \"#b91c1c\", 4: \"#7f1d1d\" }, \r\n        orange: { def: \"#f97316\", 1: \"#ffedd5\", 2: \"#fdba74\", 3: \"#c2410c\", 4: \"#7c2d12\" }, \r\n        yellow: { def: \"#eab308\", 1: \"#fef9c3\", 2: \"#fde047\", 3: \"#a16207\", 4: \"#713f12\" }, \r\n        lime:   { def: \"#84cc16\", 1: \"#ecfccb\", 2: \"#bef264\", 3: \"#4d7c0f\", 4: \"#365314\" }, \r\n        green:  { def: \"#22c55e\", 1: \"#dcfce7\", 2: \"#86efac\", 3: \"#15803d\", 4: \"#14532d\" }, \r\n        cyan:   { def: \"#06b6d4\", 1: \"#cffafe\", 2: \"#67e8f9\", 3: \"#0e7490\", 4: \"#164e63\" }, \r\n        blue:   { def: \"#3b82f6\", 1: \"#dbeafe\", 2: \"#93c5fd\", 3: \"#1d4ed8\", 4: \"#1e3a8a\" }, \r\n        purple: { def: \"#a855f7\", 1: \"#f3e8ff\", 2: \"#d8b4fe\", 3: \"#7e22ce\", 4: \"#581c87\" }, \r\n        pink:   { def: \"#ec4899\", 1: \"#fce7f3\", 2: \"#f9a8d4\", 3: \"#be185d\", 4: \"#831843\" }, \r\n    }\r\n}", "export function CreateFonts() {\r\n    return {\r\n        main:  'system-ui,-apple-system,sans-serif',\r\n        serif: 'serif',\r\n        mono:  'monospace',\r\n        sans:  'sans-serif',\r\n    }\r\n};\r\n", "export function CreateReset() {\r\n    return `*,::after,::before{box-sizing:border-box;object-fit:cover;-webkit-tap-highlight-color:transparent;font-feature-settings:\"pnum\" on,\"lnum\" on;outline:0;border:0;margin:0;padding:0;border-style:solid;color:inherit}h1,h2,h3,h4,h5,h6{font-size:var(--fsz);font-weight:700;line-height:1.2}h1{--fsz:2.5rem}h2{--fsz:2rem}h3{--fsz:1.75rem}h4{--fsz:1.5rem}h5{--fsz:1.25rem}h6{--fsz:1rem}a{text-decoration:none}hr{width:100%;margin:20px 0;border-top:1px solid #aaa}ul[role=\"list\"],ol[role=\"list\"]{list-style:none}html:focus-within{scroll-behavior:smooth}body{text-rendering:optimizeSpeed;font-family:var(--font-main)}a:not([class]){text-decoration-skip-ink:auto}img,picture{max-width:100%;vertical-align:middle}input,button,textarea,select{font:inherit}[hidden]{display:none}option{color:#000;background-color:#fff}.theme-dark{background-color:#222}.theme-dark *{color:#eee}`;\r\n}\r\n\r\n// normalize_css\r\n//export default `html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}`\r\n", "export function CreateScreens() {\r\n    return {\r\n        sm: 576,\r\n        md: 768,\r\n        lg: 992,\r\n        xl: 1200,\r\n    }\r\n}\r\n", "export function CreateStates() {\r\n    return {\r\n        h: ':hover',\r\n        f: ':focus',\r\n        c: ':checked',\r\n        a: ':active',\r\n        first: '>*:first-child',\r\n        ft: '>*:first-child',\r\n        last: '>*:last-child',\r\n        lt: '>*:last-child',\r\n        odd: '>*:nth-child(odd)',\r\n        od: '>*:nth-child(odd)',\r\n        even: '>*:nth-child(even)',\r\n        ev: '>*:nth-child(even)',\r\n        all: ' *',\r\n        '*': ' *',\r\n        every: '>*',\r\n        '>': '>*',\r\n        between: '>*+*',\r\n        bt: '>*+*',\r\n        after: '::after',\r\n        aft: '::after',\r\n        before: '::before',\r\n        bef: '::before',\r\n        dark: (selector) => `.dark ${selector}`,\r\n    };\r\n}\r\n", "export function createAttrRegexp(attr = \"class\") {\r\n    attr =  attr == \"class\" ? \"(?:class|className)\" : attr\r\n    const REGEXP = `\\\\s+${attr}\\\\s*=\\\\s*([\"'\\`])(.*?)\\\\1`\r\n    const FLAGS = 'g';\r\n\r\n    return new RegExp( REGEXP, FLAGS );\r\n}\r\n\r\n", "import createCss from \"./create-css.js\";\r\nimport prerender from \"./prerender.js\";\r\n\r\nimport { updateStore } from \"./update-store.js\";\r\nimport { createAttrRegexp } from \"../node/funcs/create-attr-regexp.js\";\r\nimport { CreateStore } from \"./create-store.js\";\r\n\r\nexport class HTMLProcessor {\r\n    constructor(ctx) {\r\n        this.ctx = ctx\r\n    }\r\n\r\n    css(html = \"\"){\r\n        const ATTRS = [\"class\", ...Object.keys(this.ctx.attr)];\r\n    \r\n        this.ctx._STORE_ = CreateStore()\r\n    \r\n        prerender(this.ctx)\r\n    \r\n        for (const attr of ATTRS) {\r\n            const MATCHES = [...html.matchAll(createAttrRegexp(attr))]\r\n    \r\n            if (MATCHES.length) {\r\n                const ATTR_VALUE = MATCHES.map(e => e[2]).join(\" \")\r\n    \r\n                if (ATTR_VALUE.trim()) {\r\n                    for (const token of ATTR_VALUE.trim().split(/\\s+/g)) {\r\n                        updateStore(this.ctx, token, attr)\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    \r\n        return createCss(this.ctx)\r\n    }\r\n}", "import version   from \"../version.js\"\r\nimport render    from \"./lib/render.js\"\r\nimport sendError from \"./helpers/send-error.js\"\r\n\r\nimport { Parser        } from \"./lib/parser/index.js\"\r\nimport { CreateStore   } from \"./lib/create-store.js\"\r\nimport { CreateAttrs   } from \"./theme/attrs/index.js\"\r\nimport { CreateClasses } from \"./theme/class.js\"\r\nimport { CreateColors  } from \"./theme/colors.js\"\r\nimport { CreateFonts   } from \"./theme/font.js\"\r\nimport { CreateReset   } from \"./theme/reset.js\"\r\nimport { CreateScreens } from \"./theme/screen.js\"\r\nimport { CreateStates  } from \"./theme/states.js\"\r\nimport { HTMLProcessor } from \"./lib/from-html.js\"\r\nimport { is } from \"./lib/check-type.js\"\r\n\r\nexport class BlickCss {\r\n    #parser \r\n    #html   \r\n\r\n    constructor(params = {}) {\r\n        this.env = params.env \r\n        this.#parser = new Parser(this) \r\n        this.#html   = new HTMLProcessor(this)   \r\n    }\r\n\r\n    class  = CreateClasses()\r\n    attr   = CreateAttrs()\r\n    screen = CreateScreens()\r\n    states = CreateStates()\r\n    colors = CreateColors()\r\n    font   = CreateFonts()\r\n    reset  = CreateReset()\r\n\r\n\r\n    autoTheme = false\r\n    beautify  = false\r\n    autoFlex  = true\r\n    useAttr   = true\r\n    time      = false\r\n    root      = true\r\n\r\n    wrapper = '.wrapper'\r\n    maxPrefix = 'm-'\r\n    divisionSymbol = \"+\"\r\n\r\n    beautifyOption = null\r\n    version = version\r\n    element = null\r\n\r\n\r\n    parse(token = '', attr = 'class') {\r\n        return this.#parser.parse(token, attr)\r\n    }\r\n\r\n\r\n    html(code = \"\") {\r\n        return this.#html.css(code)\r\n    }\r\n\r\n\r\n    config(updates = this, source = this, isFirstCall = true) {\r\n        if (updates === source) return source\r\n    \r\n        if (!is.obj(updates)) {\r\n            return sendError(\"The blick.config function must contain an object\")\r\n        }\r\n\r\n        for (let key in updates) {\r\n            if (is.null(updates[key]) || is.undef(updates[key])) {\r\n                delete source[key]\r\n            }\r\n            else if (is.obj(updates[key]) && !is.arr(updates[key])) {\r\n                if (!source[key] || is.str(source[key])) {\r\n                    source[key] = {};\r\n                }\r\n                this.config(updates[key], source[key], false);\r\n            }\r\n            else {\r\n                source[key] = updates[key];\r\n            }\r\n        }\r\n\r\n        if (isFirstCall) {\r\n            // code on use config\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n\r\n    setup(params) {\r\n        const { element, id } = params || {}\r\n\r\n        if (typeof window == 'undefined') {\r\n            console.log(\"BlickError: you can only use setup in the browser\")\r\n        }\r\n\r\n        const STYLE_TAG = element || document.createElement('style');\r\n        STYLE_TAG.id = id || 'BLICK_OUTPUT_' + Math.floor(Math.random() * 1000);\r\n        document.head.append(STYLE_TAG);\r\n\r\n        this.element = STYLE_TAG\r\n        \r\n        return this\r\n    }\r\n\r\n\r\n    render() {\r\n        return render(this)\r\n    }\r\n\r\n\r\n    _STORE_ = CreateStore()\r\n}", "import { BlickCss } from './blick.js';\r\nimport RENDER from './lib/render.js';\r\n// import context from './context.js';\r\n\r\nconst BLICK = new BlickCss({ env: \"browser\" })\r\n\r\nBLICK.setup({\r\n    id: \"BLICK_OUTPUT\"\r\n})\r\n\r\nwindow.blick = BLICK;\r\nwindow.BlickCss = BlickCss;\r\n\r\n// context.set(BLICK);\r\n\r\nconst observer = new MutationObserver(() => RENDER(BLICK))\r\n\r\nconst observer_params = {\r\n    attributeFilter: [\r\n        'class',\r\n        ...Object.keys(BLICK.attr)\r\n    ],\r\n    childList: true,\r\n    attributes: true,\r\n    subtree: true,\r\n}\r\n\r\nobserver.observe(document.documentElement, observer_params);"],
  "mappings": "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GAAI,cACR,EACMC,EAAS,CACX,EAAG,SACH,GAAI,WACJ,EAAG,QACH,EAAG,MACH,GAAI,SACR,EAEMC,EAAU,CACZ,EAAG,CACC,MAAO,WACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,iCACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,iCACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,eACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,iBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,kBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,gBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,wBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,sBACP,MAAO,IACX,EACA,OAAQ,cACR,EAAG,CACC,MAAO,YACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,mCACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,mCACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,gBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,kBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,mBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,iBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,yBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,uBACP,MAAO,IACX,EACA,MAAO,CACH,MAAO,gBACP,UAAW,QACX,MAAO,KACP,EAAG,CAAE,MAAO,gBAAiB,UAAW,QAAS,MAAO,IAAK,EAC7D,EAAG,CAAE,MAAO,eAAgB,UAAW,QAAS,MAAO,IAAK,CAChE,EACA,EAAG,CACC,MAAO,iBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,qBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,uBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,wBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,sBACP,MAAO,IACX,EACA,GAAI,CACA,MAAO,iBACP,MAAO,CACH,EAAG,OACH,EAAG,OACH,GAAI,cACJ,GAAI,cACR,CACJ,EACA,GAAI,CACA,MAAO,gBACX,EACA,OAAQ,CACJ,KAAM,mBACN,MAAO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",
  "names": ["version_default", "isElement", "element", "error", "TYPES", "e", "is", "__spreadValues", "create_root_default", "ctx", "fonts", "colors", "type", "color", "is", "num", "create_css_default", "ctx", "_a", "STORE", "media_str", "css_str", "attr", "md", "result_css", "create_root_default", "key", "is_browser_default", "send_error_default", "text", "is_browser_default", "createMediaWidth", "sizes", "is", "WIDTHS", "index", "size", "type", "unit", "MediaParser", "ctx", "str", "createMediaWidth", "send_error_default", "prerender_default", "ctx", "parseMedia", "MediaParser", "scr", "size", "is", "timer", "label", "startTime", "diff", "updateStore", "ctx", "token", "attr", "_a", "AS", "SS", "MS", "CS", "STRUCT", "MEDIA", "RULE", "m", "once", "render_default", "ctx", "TIMER", "timer", "ATTRS", "NODES", "e", "prerender_default", "is_style_updated", "node", "attr", "ATTR_VALUE", "is", "token", "updateStore", "create_css_default", "format_selector_default", "token", "attr", "format", "escape", "str", "symbol", "RE", "execRegexp", "replacement", "_", "esc", "StatesParser", "ctx", "MediaParser", "state", "attr", "IS_IN_ARR", "IS_MAX_WD", "IS_NUMBER", "raw", "val", "type", "is", "escape", "RuleParser", "ctx", "path", "object", "SPLIT_SYMBOL", "RE_PATH", "PARTS", "_", "esc", "array_path", "value_string", "i", "calc_opacity_default", "number", "color_names_default", "hex_alpha_default", "num", "send_error_default", "alpha", "var_color_default", "ctx", "str", "_a", "_b", "colors", "is", "colorName", "shade", "e", "create_var_default", "ctx", "variable", "opacity", "is", "result", "var_color_default", "hex_alpha_default", "calc_opacity_default", "from_rgb_default", "r", "g", "b", "x", "hex", "create_color_default", "ctx", "color", "opacity", "create_var_default", "r", "g", "b", "hex_alpha_default", "a", "from_rgb_default", "color_names_default", "send_error_default", "ValueParser", "ctx", "item", "source", "index", "first", "second", "UNIT", "create_color_default", "is", "value", "S", "RE_SPLIT", "values", "STATIC", "DYNAMIC", "e", "StylesParser", "ctx", "ValueParser", "RuleParser", "style", "attr", "token", "states", "target", "declaration", "values", "important", "source", "path", "value", "attrElseFunc", "is", "result", "src", "val", "e", "createRule", "STRUCT", "_a", "IS_MEDIA", "MEDIA", "DECLARED", "state", "is", "rule", "replaceDynamic", "_", "group", "_b", "_c", "_d", "_e", "vals", "unit", "style", "imp", "key", "re", "prop", "val", "escape", "Parser", "ctx", "StatesParser", "StylesParser", "token", "attr", "styles", "states", "escape", "selector", "format_selector_default", "rawSelector", "e", "EXTRA_SELECTOR", "createRule", "CreateStore", "STYLE_STORE", "ATTRS_STORE", "MEDIA_STORE", "CSS_STORE", "CreateAttrFlex", "c_vals", "i_vals", "e", "CreateAttrGrid", "c_vals", "i_vals", "e", "CreateAttrText", "style", "states", "token", "v1", "v2", "v3", "CreateAttrs", "CreateAttrFlex", "CreateAttrGrid", "CreateAttrText", "CreateClasses", "w_vals", "h_vals", "c_vals", "i_vals", "classes", "src", "rawVal", "val", "__spreadValues", "v1", "v2", "v3", "CreateAttrText", "CreateColors", "CreateFonts", "CreateReset", "CreateScreens", "CreateStates", "selector", "createAttrRegexp", "attr", "REGEXP", "FLAGS", "HTMLProcessor", "ctx", "html", "ATTRS", "CreateStore", "prerender_default", "attr", "MATCHES", "createAttrRegexp", "ATTR_VALUE", "e", "token", "updateStore", "create_css_default", "_parser", "_html", "BlickCss", "params", "__privateAdd", "__publicField", "CreateClasses", "CreateAttrs", "CreateScreens", "CreateStates", "CreateColors", "CreateFonts", "CreateReset", "version_default", "CreateStore", "__privateSet", "Parser", "HTMLProcessor", "token", "attr", "__privateGet", "code", "updates", "source", "isFirstCall", "is", "send_error_default", "key", "element", "id", "STYLE_TAG", "render_default", "BLICK", "BlickCss", "observer", "render_default", "observer_params"]
}
