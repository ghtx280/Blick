{
  "version": 3,
  "sources": ["../version.js", "../src/lib/check-type.js", "../src/lib/create-root.js", "../src/lib/create-css.js", "../src/helpers/is-browser.js", "../src/helpers/send-error.js", "../src/lib/create-media-width.js", "../src/lib/parser/parse-media.js", "../src/lib/prerender.js", "../src/lib/timer.js", "../src/lib/update-store.js", "../src/lib/render.js", "../src/lib/format-selector.js", "../src/helpers/escape.js", "../src/lib/parser/parse-states.js", "../src/lib/parser/parse-rule.js", "../src/helpers/color/calc-opacity.js", "../src/helpers/color/color-names.js", "../src/helpers/color/hex-alpha.js", "../src/helpers/color/var-color.js", "../src/helpers/color/create-var.js", "../src/helpers/color/from-rgb.js", "../src/helpers/create-color.js", "../src/lib/parser/parse-value.js", "../src/lib/parser/parse-styles.js", "../src/lib/create-rule.js", "../src/lib/parser/index.js", "../src/lib/create-store.js", "../src/theme/attrs/flex.js", "../src/theme/attrs/grid.js", "../src/theme/attrs/text.js", "../src/theme/attrs/index.js", "../src/theme/class.js", "../src/theme/colors.js", "../src/theme/font.js", "../src/theme/reset.js", "../src/theme/screen.js", "../src/theme/states.js", "../src/node/funcs/create-attr-regexp.js", "../src/lib/from-html.js", "../src/blick.js", "../src/browser.js"],
  "sourcesContent": ["export default \"2.1.8\"", "function isElement(element) {\r\n    try {\r\n        return (\r\n            element instanceof Element ||\r\n            element instanceof HTMLElement ||\r\n            (\r\n                element.nodeName &&\r\n                element.nodeType &&\r\n                element.ownerDocument \r\n            )\r\n        )  \r\n    } catch (error) {\r\n        return false\r\n    }\r\n}\r\n\r\nconst TYPES = {\r\n    func: (e) => typeof e === 'function',\r\n    str:  (e) => typeof e === 'string',\r\n    obj:  (e) => typeof e === 'object',\r\n    num:  (e) => typeof e === 'number',\r\n    arr:  (e) => Array.isArray(e),\r\n    var:  (e) => /^\\$.+/.test(e),\r\n    hex:  (e) => /^#[\\dabcdef]{3,8}$/.test(String(e).trim()),\r\n    exist: (e) => e !== undefined,\r\n    null:  (e) => e === null,\r\n    undef: (e) => e === undefined,\r\n    element: (e) => isElement(e),\r\n};\r\n\r\nexport const is = {\r\n    ...TYPES,\r\n\r\n    // not: new Proxy(TYPES, {\r\n    //     get(obj, key) {\r\n    //         if (key in obj) {\r\n    //             return (val) => !obj[key](val);\r\n    //         } else {\r\n    //             throw new Error(`BlickCss: type '${key}' don't exist`);\r\n    //         }\r\n    //     },\r\n    // }),\r\n};\r\n", "// import context from '../context.js';\r\nimport { is } from './check-type.js';\r\n\r\nexport default function(ctx) {\r\n    // const ctx = context.get()\r\n\r\n    let fonts = '';\r\n    let colors = '';\r\n\r\n    for (const type in ctx?.font) {\r\n        fonts += `--font-${type}:${ctx.font[type]};`;\r\n    }\r\n\r\n    for (const color in ctx?.colors) {\r\n        if (is.str(ctx.colors[color])) {\r\n            colors += `--${color}:${ctx.colors[color]};`;\r\n            continue;\r\n        }\r\n\r\n        for (const num in ctx.colors[color]) {\r\n            colors += `--${color + (num === 'def' ? '' : '-' + num)}:${\r\n                ctx.colors[color][num]\r\n            };`;\r\n        }\r\n    }\r\n    return `:root{${colors + fonts}}`;\r\n}\r\n", "// import context from '../context.js';\r\nimport createRoot from './create-root.js';\r\n\r\nexport default function(ctx) {\r\n    // const ctx = context.get()\r\n    const STORE = ctx._STORE_.CSS_STORE\r\n    \r\n    let media_str = '';\r\n    let css_str = '';\r\n\r\n    for (const attr in STORE) {\r\n        if (attr === 'MEDIA') {\r\n            for (const md in STORE.MEDIA) {\r\n                media_str += `@media${md}{${STORE.MEDIA[md]}}`;\r\n            }\r\n            continue;\r\n        }\r\n        css_str += STORE[attr];\r\n    }\r\n\r\n    let result_css = \"\"\r\n\r\n    result_css += `/* ! blickcss v${ctx.version} | MIT License | https://github.com/ghtx280/blickcss */\\n\\n`\r\n\r\n    if (ctx.reset) {\r\n        result_css += ctx.reset\r\n    }\r\n    if (ctx.root) {\r\n        result_css += createRoot(ctx)\r\n    }\r\n    if (ctx.wrapper) {\r\n        result_css += `${ctx.wrapper}{display:block;width:100%;margin:0 auto;padding-left:var(--wrapper-padding,15px);padding-right:var(--wrapper-padding,15px)}`\r\n    }\r\n\r\n    for (const key in ctx.attr) {\r\n        if (ctx.attr[key]?._using && key in STORE) {\r\n            result_css += `[${key}]{${ctx.attr[key]._using}}`\r\n        }\r\n    }\r\n\r\n    if (ctx.autoFlex) {\r\n        result_css += '[class*=\"flex-\"],[class*=\"jc-\"],[class*=\"ai-\"],[class*=\"gap-\"]{display:flex}'\r\n    }\r\n\r\n    return (\r\n        result_css + css_str + media_str\r\n    )\r\n}\r\n\r\n// ${KEYFRAMES}\r\n", "/**\r\n * @returns {boolean}\r\n */\r\nexport default function(){\r\n    return typeof window !== \"undefined\"\r\n}", "import isBrowser from \"./is-browser.js\";\r\n\r\n/**\r\n * send error in terminal\r\n * @param {string} text \r\n */\r\nexport default function(text){\r\n    if (isBrowser()) {\r\n        console.error(\"BlickError: \" + text);\r\n    }\r\n    else {\r\n        console.log(\"\\x1b[31m\\x1b[1m\");\r\n        console.log(\"BlickError: \" + text);\r\n        console.log(\"\\x1b[0m\");\r\n    }\r\n}", "import { is } from './check-type.js';\r\n\r\nexport function createMediaWidth(sizes) {\r\n    if (!is.obj(sizes)) sizes = [sizes];\r\n\r\n    const WIDTHS = [];\r\n\r\n    for (const index in sizes) {\r\n        let size = sizes[index];\r\n\r\n        if (!size) continue;\r\n\r\n        size = size.toString().replace(/\\(|\\)/g, '');\r\n\r\n        if (+size[0]) {\r\n            let type = +index === 0 ? 'min' : 'max';\r\n            let unit = +size ? 'px' : '';\r\n\r\n            WIDTHS.push(`(${type}-width:${size}${unit})`);\r\n        } else {\r\n            WIDTHS.push(`(${size})`);\r\n        }\r\n    }\r\n\r\n    return WIDTHS.join(' and ');\r\n}\r\n", "// import context from '../../context.js';\r\nimport sendError from '../../helpers/send-error.js';\r\nimport { createMediaWidth } from '../create-media-width.js';\r\n\r\nexport class MediaParser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx\r\n    }\r\n\r\n    parse(str) {\r\n        if (!str) return sendError(`value is required, (${str})`);\r\n    \r\n        if (str.startsWith(this.ctx.maxPrefix)) {\r\n            str = str.slice(this.ctx.maxPrefix.length);\r\n            return createMediaWidth([null, this.ctx.screen[str] || str]);\r\n        }\r\n    \r\n        return createMediaWidth(this.ctx.screen[str] || str);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  function CreateMediaParser(ctx) {\r\n//     return function(str) {\r\n//         // const ctx = context.get()\r\n        \r\n//         if (!str) throw new Error(`value is required, (${str})`);\r\n    \r\n//         if (str.startsWith(ctx.maxPrefix)) {\r\n//             str = str.slice(ctx.maxPrefix.length);\r\n//             return createMediaWidth([null, ctx.screen[str] || str]);\r\n//         }\r\n    \r\n//         return createMediaWidth(ctx.screen[str] || str);\r\n//     }\r\n// }", "// import context from '../context.js';\r\nimport { is } from './check-type.js';\r\nimport { MediaParser } from './parser/parse-media.js';\r\n\r\nexport default function(ctx) {\r\n    // const ctx = context.get()\r\n   \r\n    if (!ctx.dark) {\r\n        ctx.dark = ctx.states.dark('').trim();\r\n    }\r\n\r\n    if (typeof window !== undefined) {\r\n        if (\r\n            ctx.autoTheme &&\r\n            matchMedia('(prefers-color-scheme: dark)').matches\r\n        ) {\r\n            if (ctx.dark.startsWith('.')) {\r\n                document.documentElement.classList.add(ctx.dark.slice(1));\r\n            } else if (ctx.dark.startsWith('#')) {\r\n                document.documentElement.id = ctx.dark.slice(1);\r\n            } else if (ctx.dark.startsWith('[') && ctx.dark.endsWith(']')) {\r\n                document.documentElement.setAttribute(ctx.dark.slice(1, -1));\r\n            }\r\n        }\r\n    }\r\n\r\n    if (ctx.wrapper) {\r\n        const parseMedia = new MediaParser(ctx)\r\n\r\n        for (const scr in ctx.screen) {\r\n            let size = ctx.screen[scr];\r\n\r\n            ctx._STORE_.CSS_STORE.MEDIA[parseMedia.parse(scr)] =\r\n                ctx.wrapper + `{max-width:${is.num(size) ? size : size[0]}px}`;\r\n        }\r\n    }\r\n}\r\n", "export function timer(label) {\r\n    const startTime = performance.now();\r\n    const diff = () => performance.now() - startTime\r\n    return {\r\n        stop() {\r\n            console.log(`${label}: ${diff().toFixed(1)}ms`);\r\n        },\r\n        get() {\r\n            return diff().toFixed(1)\r\n        },\r\n        getFormated(){\r\n            return `${diff().toFixed(1)}ms`\r\n        }\r\n    };\r\n}\r\n", "// import context from \"../context.js\";\r\n\r\nexport function updateStore(ctx, token, attr) {\r\n    // const ctx = context.get();\r\n\r\n    const AS = ctx._STORE_.ATTRS_STORE;\r\n    const SS = ctx._STORE_.STYLE_STORE;\r\n    const MS = ctx._STORE_.MEDIA_STORE;\r\n    const CS = ctx._STORE_.CSS_STORE;\r\n\r\n\r\n    if (!(attr in CS)) CS[attr] = '';\r\n    if (!(attr in SS)) SS[attr] = Object.create(null);\r\n    if (!(attr in AS)) AS[attr] = Object.create(null);\r\n    if (token in SS[attr]) return false;\r\n    if (token in AS[attr]) return false;\r\n\r\n    AS[attr][token] = true;\r\n\r\n    const STRUCT = ctx.parse(token, attr)?.create()\r\n\r\n    if (!STRUCT) return false\r\n\r\n    const MEDIA = STRUCT.media\r\n    const RULE = STRUCT.css()\r\n\r\n    // const [MEDIA, RULE] = ctx.parse(token, attr) || [[], ''];\r\n\r\n    if (!RULE) {\r\n        SS[attr][token] = null;\r\n        return false;\r\n    }\r\n\r\n    if (MEDIA) {\r\n        for (const m of MEDIA) {\r\n            if (!(m.raw in MS)) MS[m.raw] = Object.create(null);\r\n            if (!(m.val in CS.MEDIA)) CS.MEDIA[m.val] = '';\r\n            if (token in MS[m.raw]) return false;\r\n\r\n            MS[m.raw][token] = RULE;\r\n            CS.MEDIA[m.val] += RULE;\r\n        }\r\n    }\r\n    else {\r\n        SS[attr][token] = RULE;\r\n        CS[attr] += RULE;\r\n    }\r\n\r\n    return true\r\n}", "// import tag from '../style-tag.js';\r\n// import context from '../context.js';\r\nimport createCss from './create-css.js';\r\nimport prerender from './prerender.js';\r\n\r\nimport { is } from './check-type.js';\r\nimport { timer } from './timer.js';\r\nimport { updateStore } from './update-store.js';\r\n\r\nlet once;\r\n\r\nexport default function(ctx) {\r\n    // const ctx = context.get()\r\n    \r\n    // temporarily disabled\r\n    // if (record && !checkRecord(record)) return;\r\n    \r\n    const TIMER = timer('Blick: Styles updated');\r\n    const ATTRS = ['class', ...Object.keys(ctx.attr)];\r\n    const NODES = document.querySelectorAll(ATTRS.map((e) => `[${e}]`).join());\r\n\r\n    if (!once || ctx._CLI_) {\r\n        prerender(ctx);\r\n        once = true;\r\n    }\r\n\r\n    let is_style_updated;\r\n\r\n    NODES.forEach((node) => {\r\n        for (const attr of ATTRS) {\r\n            let ATTR_VALUE = node.getAttribute(attr);\r\n            \r\n            if (is.str(ATTR_VALUE)) ATTR_VALUE = ATTR_VALUE.trim();\r\n\r\n            if (!ATTR_VALUE) continue;\r\n\r\n            for (const token of ATTR_VALUE.trim().split(/\\s+/g)) {\r\n                if (!updateStore(ctx, token, attr)) {\r\n                    continue\r\n                }\r\n                is_style_updated = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    if (is_style_updated) {\r\n        ctx.element.textContent = createCss(ctx);\r\n        if (ctx.time) TIMER.stop(); // debugging the script execution time\r\n    }\r\n\r\n    return ctx.element.textContent;\r\n}\r\n", "export default function (token, attr = 'class') {\r\n    let format = token;\r\n\r\n    format = format.replace(/[^\\w-_]/g, '\\\\$&').replace(/^\\d/, '\\\\3$& ');\r\n\r\n    if (attr === 'raw') {\r\n        return format;\r\n    }\r\n    if (attr === 'class') {\r\n        return `.${format}`;\r\n    }\r\n\r\n    return `[${attr}~=\"${token}\"]`;\r\n}\r\n", "export function escape(str = \"\", symbol = \"\") {\n    const RE = new RegExp(`(\\\\\\\\)?\\\\${symbol}`, 'g')\n    \n\n    function execRegexp(replacement) {\n        return str.replace(RE, (_, esc) => {\n            if (esc) {\n               return _ \n            }\n            return replacement || \"\\n\"\n        })\n    }\n\n    return {\n        replace(replacement){\n            return execRegexp(replacement)\n        },\n\n        split(){\n            return execRegexp().split(\"\\n\")\n        }\n    }\n}", "// import context from '../../context.js';\r\nimport { escape } from '../../helpers/escape.js';\r\nimport { is } from '../check-type.js';\r\nimport { MediaParser } from './parse-media.js';\r\n\r\nexport class StatesParser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n        this.parseMedia = new MediaParser(ctx)\r\n    }\r\n\r\n    parse(state, attr) {\r\n        const IS_IN_ARR = state in this.ctx.screen;\r\n        const IS_MAX_WD = state.startsWith(this.ctx.maxPrefix);\r\n        const IS_NUMBER = +state;\r\n\r\n        let raw = state;\r\n        let val = null;\r\n        let type = null;\r\n\r\n        if (IS_IN_ARR || IS_NUMBER || IS_MAX_WD) {\r\n            val = this.parseMedia.parse(state);\r\n            type = 'media';\r\n        } else {\r\n            if (raw.startsWith('&')) {\r\n                val = raw.slice(1);\r\n            } else {\r\n                val = this.ctx.states[raw] || ':' + raw;\r\n            }\r\n            if (is.str(val)) {\r\n                // val = val.replace(/(?<!\\\\)_/g, ' ');\r\n                val = escape(val, \"_\").replace(\" \")\r\n            }\r\n\r\n            type = 'pseudo';\r\n        }\r\n        return { raw, val, type };\r\n    }\r\n}\r\n\r\n// export function CreateStatesParser(ctx){\r\n\r\n//     const parseMedia = new MediaParser(ctx)\r\n\r\n//     return function(state, attr) {\r\n\r\n//         const IS_IN_ARR = state in ctx.screen;\r\n//         const IS_MAX_WD = state.startsWith(ctx.maxPrefix);\r\n//         const IS_NUMBER = +state;\r\n\r\n//         let raw = state;\r\n//         let val = null;\r\n//         let type = null;\r\n\r\n//         if (IS_IN_ARR || IS_NUMBER || IS_MAX_WD) {\r\n//             val = parseMedia(state);\r\n//             type = 'media';\r\n//         } else {\r\n//             if (raw.startsWith('&')) {\r\n//                 val = raw.slice(1);\r\n//             } else {\r\n//                 val = ctx.states[raw] || ':' + raw;\r\n//             }\r\n//             if (is.str(val)) {\r\n//                 val = val.replace(/(?<!\\\\)_/g, ' ');\r\n//             }\r\n\r\n//             type = 'pseudo';\r\n//         }\r\n//         return { raw, val, type };\r\n//     }\r\n// }\r\n", "export class RuleParser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx\r\n    }\r\n\r\n    parse(path, object){\r\n        const SPLIT_SYMBOL = \"-\"\r\n        const RE_PATH = new RegExp(`(\\\\\\\\)?\\\\${SPLIT_SYMBOL}`, \"g\");\r\n\r\n        const PARTS = path\r\n            .replace(RE_PATH, (_, esc) => esc ? SPLIT_SYMBOL : \"\\n\" )\r\n            .split(\"\\n\")\r\n        let array_path = [];\r\n        let value_string = null;\r\n\r\n    \r\n        for (const i in PARTS) {\r\n            if (!object[PARTS[i]]) {\r\n                if (i == 0) object = null;\r\n                value_string = PARTS.slice(i).join('-');\r\n                break;\r\n            }\r\n            array_path.push(PARTS[i]);\r\n            object = object[PARTS[i]];\r\n        }\r\n    \r\n        return {\r\n            path: array_path,\r\n            value: value_string,\r\n            source: object,\r\n        };\r\n    }\r\n}\r\n", "/**\r\n * \r\n * @param {number} number \r\n * @returns {number}\r\n */\r\nexport default function(number) {\r\n    if (+number) {\r\n        return number > 1 ? number / 100 : number;\r\n    }\r\n    return number\r\n}", "export default {\r\n    aliceblue: '#f0f8ff',   \r\n    antiquewhite: '#faebd7',\r\n    aqua: '#00ffff',        \r\n    aquamarine: '#7fffd4',  \r\n    azure: '#f0ffff',       \r\n    beige: '#f5f5dc',       \r\n    bisque: '#ffe4c4',      \r\n    black: '#000000',\r\n    blanchedalmond: '#ffebcd',\r\n    blue: '#0000ff',\r\n    blueviolet: '#8a2be2',\r\n    brown: '#a52a2a',\r\n    burlywood: '#deb887',\r\n    cadetblue: '#5f9ea0',\r\n    chartreuse: '#7fff00',\r\n    chocolate: '#d2691e',\r\n    coral: '#ff7f50',\r\n    cornflowerblue: '#6495ed',\r\n    cornsilk: '#fff8dc',\r\n    crimson: '#dc143c',\r\n    cyan: '#00ffff',\r\n    darkblue: '#00008b',\r\n    darkcyan: '#008b8b',\r\n    darkgoldenrod: '#b8860b',\r\n    darkgray: '#a9a9a9',\r\n    darkgreen: '#006400',\r\n    darkgrey: '#a9a9a9',\r\n    darkkhaki: '#bdb76b',\r\n    darkmagenta: '#8b008b',\r\n    darkolivegreen: '#556b2f',\r\n    darkorange: '#ff8c00',\r\n    darkorchid: '#9932cc',\r\n    darkred: '#8b0000',\r\n    darksalmon: '#e9967a',\r\n    darkseagreen: '#8fbc8f',\r\n    darkslateblue: '#483d8b',\r\n    darkslategray: '#2f4f4f',\r\n    darkslategrey: '#2f4f4f',\r\n    darkturquoise: '#00ced1',\r\n    darkviolet: '#9400d3',\r\n    deeppink: '#ff1493',\r\n    deepskyblue: '#00bfff',\r\n    dimgray: '#696969',\r\n    dimgrey: '#696969',\r\n    dodgerblue: '#1e90ff',\r\n    firebrick: '#b22222',\r\n    floralwhite: '#fffaf0',\r\n    forestgreen: '#228b22',\r\n    fuchsia: '#ff00ff',\r\n    gainsboro: '#dcdcdc',\r\n    ghostwhite: '#f8f8ff',\r\n    gold: '#ffd700',\r\n    goldenrod: '#daa520',\r\n    gray: '#808080',\r\n    green: '#008000',\r\n    greenyellow: '#adff2f',\r\n    grey: '#808080',\r\n    honeydew: '#f0fff0',\r\n    hotpink: '#ff69b4',\r\n    indianred: '#cd5c5c',\r\n    indigo: '#4b0082',\r\n    ivory: '#fffff0',\r\n    khaki: '#f0e68c',\r\n    lavender: '#e6e6fa',\r\n    lavenderblush: '#fff0f5',\r\n    lawngreen: '#7cfc00',\r\n    lemonchiffon: '#fffacd',\r\n    lightblue: '#add8e6',\r\n    lightcoral: '#f08080',\r\n    lightcyan: '#e0ffff',\r\n    lightgoldenrodyellow: '#fafad2',\r\n    lightgray: '#d3d3d3',\r\n    lightgreen: '#90ee90',\r\n    lightgrey: '#d3d3d3',\r\n    lightpink: '#ffb6c1',\r\n    lightsalmon: '#ffa07a',\r\n    lightseagreen: '#20b2aa',\r\n    lightskyblue: '#87cefa',\r\n    lightslategray: '#778899',\r\n    lightslategrey: '#778899',\r\n    lightsteelblue: '#b0c4de',\r\n    lightyellow: '#ffffe0',\r\n    lime: '#00ff00',\r\n    limegreen: '#32cd32',\r\n    linen: '#faf0e6',\r\n    magenta: '#ff00ff',\r\n    maroon: '#800000',\r\n    mediumaquamarine: '#66cdaa',\r\n    mediumblue: '#0000cd',\r\n    mediumorchid: '#ba55d3',\r\n    mediumpurple: '#9370db',\r\n    mediumseagreen: '#3cb371',\r\n    mediumslateblue: '#7b68ee',\r\n    mediumspringgreen: '#00fa9a',\r\n    mediumturquoise: '#48d1cc',\r\n    mediumvioletred: '#c71585',\r\n    midnightblue: '#191970',\r\n    mintcream: '#f5fffa',\r\n    mistyrose: '#ffe4e1',\r\n    moccasin: '#ffe4b5',\r\n    navajowhite: '#ffdead',\r\n    navy: '#000080',\r\n    oldlace: '#fdf5e6',\r\n    olive: '#808000',\r\n    olivedrab: '#6b8e23',\r\n    orange: '#ffa500',\r\n    orangered: '#ff4500',\r\n    orchid: '#da70d6',\r\n    palegoldenrod: '#eee8aa',\r\n    palegreen: '#98fb98',\r\n    paleturquoise: '#afeeee',\r\n    palevioletred: '#db7093',\r\n    papayawhip: '#ffefd5',\r\n    peachpuff: '#ffdab9',\r\n    peru: '#cd853f',\r\n    pink: '#ffc0cb',\r\n    plum: '#dda0dd',\r\n    powderblue: '#b0e0e6',\r\n    purple: '#800080',\r\n    rebeccapurple: '#663399',\r\n    red: '#ff0000',\r\n    rosybrown: '#bc8f8f',\r\n    royalblue: '#4169e1',\r\n    saddlebrown: '#8b4513',\r\n    salmon: '#fa8072',\r\n    sandybrown: '#f4a460',\r\n    seagreen: '#2e8b57',\r\n    seashell: '#fff5ee',\r\n    sienna: '#a0522d',\r\n    silver: '#c0c0c0',\r\n    skyblue: '#87ceeb',\r\n    slateblue: '#6a5acd',\r\n    slategray: '#708090',\r\n    slategrey: '#708090',\r\n    snow: '#fffafa',\r\n    springgreen: '#00ff7f',\r\n    steelblue: '#4682b4',\r\n    tan: '#d2b48c',\r\n    teal: '#008080',\r\n    thistle: '#d8bfd8',\r\n    tomato: '#ff6347',\r\n    turquoise: '#40e0d0',\r\n    violet: '#ee82ee',\r\n    wheat: '#f5deb3',\r\n    white: '#ffffff',\r\n    whitesmoke: '#f5f5f5',\r\n    yellow: '#ffff00',\r\n    yellowgreen: '#9acd32'\r\n  };", "import sendError from \"../send-error.js\";\r\n\r\n/**\r\n * 50 => 80 (toString(16))\r\n * @param {number | string} num opacity\r\n * @returns {string}\r\n */\r\nexport default function(num) {\r\n    num = +num\r\n\r\n    if (num < 0 || num > 100) {\r\n        sendError('Alpha value must be a from 0 to 100');\r\n        return \"\"\r\n    }\r\n\r\n    let alpha = Math.round((num / 100) * 255).toString(16);\r\n\r\n    if (alpha.length === 1) {\r\n        alpha = '0' + alpha;\r\n    }\r\n\r\n    return alpha;\r\n}", "import { is } from \"../../lib/check-type.js\";\r\nimport { BlickCss } from \"../../blick.js\";\r\n\r\n/**\r\n * \"$foo\" => undefined   \r\n * \"$red\" => \"#ef4444\"\r\n * @param {BlickCss} ctx \r\n * @param {string} str \r\n * @returns {string | undefined}\r\n */\r\nexport default function(ctx, str) {\r\n    const colors = ctx.colors\r\n\r\n    if (!colors) return;\r\n\r\n    if (is.var(str)) {\r\n        str = str.slice(1);\r\n    }\r\n\r\n    const [colorName, shade] = str.split('-');\r\n\r\n    if (shade) {\r\n        if (colors[colorName][shade]) {\r\n            return colors[colorName][shade];\r\n        } else {\r\n            throw Error(\r\n                `Blick: This shade \"${shade}\" is not exist for \"${colorName}\".\\n` +\r\n                    `Available shades: ${Object.keys(colors[colorName]).filter(\r\n                        (e) => e !== 'def'\r\n                    )}`\r\n            );\r\n        }\r\n    }\r\n    return (\r\n        colors[colorName]?.def ||\r\n        colors[colorName]?.DEFAULT ||\r\n        colors[colorName]\r\n    );\r\n}", "import { is } from \"../../lib/check-type.js\";\r\nimport calcOpacity from \"./calc-opacity.js\";\r\nimport hexAlpha from \"./hex-alpha.js\";\r\nimport varColor from \"./var-color.js\";\r\n\r\n/**\r\n * \r\n * @param {string} variable \r\n * @param {string} opacity \r\n * @returns \r\n */\r\nexport default function(ctx, variable, opacity = \"\") {\r\n    if (is.var(variable)) {\r\n        variable = variable.slice(1);\r\n    }\r\n\r\n    if (!opacity) {\r\n        return `var(--${variable})`;\r\n    }\r\n    \r\n    let result = varColor(ctx, variable)\r\n\r\n    if (result) {\r\n        return result + hexAlpha(opacity)\r\n    }\r\n\r\n    return `var(--${variable});opacity:${calcOpacity(opacity)}`;    \r\n}", "/**\r\n * (r, g, b) => \"#rrggbb\"\r\n * @param {string | number} r - red\r\n * @param {string | number} g - green\r\n * @param {string | number} b - blue\r\n * @returns {string}\r\n */\r\nexport default function(r = \"0\", g = \"0\", b = \"0\") {\r\n    return '#' + [r, g, b]\r\n    .map(x => {\r\n        const hex = (+x).toString(16)\r\n        return hex.length === 1 ? '0' + hex : hex\r\n    })\r\n    .join('')\r\n}", "import { BlickCss    } from \"../blick.js\"\r\n\r\nimport calcOpacity from \"./color/calc-opacity.js\"\r\nimport colorNames  from \"./color/color-names.js\"\r\nimport createVar   from \"./color/create-var.js\"\r\nimport varColor    from \"./color/var-color.js\"\r\nimport fromRgb     from \"./color/from-rgb.js\"\r\n\r\nimport sendError from \"./send-error.js\"\r\nimport hexAlpha from \"./color/hex-alpha.js\"\r\n\r\n/**\r\n * hex(\"red\", 50) => #ff000080   \r\n * hex(\"#0f0\", 50) => #00ff0080   \r\n * hex(\"$red\", 50) => #ef444480   \r\n * hex(\"rgb(0,0,255)\", 50) => #0000ff80    \r\n * hex(\"red\") => #ff0000     \r\n * hex(\"#0f0\") => #00ff00   \r\n * hex(\"$red\") => #ef4444    \r\n * hex(\"rgb(0,0,255)\") => #0000ff   \r\n * \r\n * @param {BlickCss} ctx \r\n * @param {string} color \r\n * @param {string} opacity \r\n * @returns {string | null}\r\n */\r\nexport default function(ctx, color, opacity) {\r\n   \r\n    \r\n    // variable handling\r\n    if (color[0] == \"$\") {\r\n       return createVar(ctx, color, opacity)\r\n    }\r\n  \r\n    // hex handling\r\n    if (color[0] === \"#\") {\r\n        if (color.length === 4) {\r\n            let r = color[1]\r\n            let g = color[2]\r\n            let b = color[3]\r\n            return \"#\"+r+r+g+g+b+b + hexAlpha(opacity)\r\n        }\r\n        \r\n        return color + hexAlpha(opacity)\r\n    }\r\n    \r\n    // rgb handling\r\n    if (color.startsWith(\"rgb\")) {\r\n        let [r, g, b, a] = color.replace(/rgba?\\(\\s*|\\s*\\)/g, \"\").split(/\\s*,\\s*/)\r\n        \r\n        return a ? color : fromRgb(r, g, b) + hexAlpha(opacity)\r\n    }\r\n\r\n    // processing of color name \r\n    if (color in colorNames) {\r\n        return colorNames[color] + hexAlpha(opacity)\r\n    }\r\n    else {\r\n        sendError(`Invalid color \"${color}\"`)\r\n    }\r\n\r\n    return null  \r\n}\r\n\r\n\r\n", "import createColor from '../../helpers/create-color.js';\r\nimport { is } from '../check-type.js';\r\n\r\nexport class ValueParser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx   \r\n    }\r\n\r\n    getItem(item = '', source = {}, index = 0) {\r\n        const [first, second] = item.replace(/\\\\/g, '').split('/');\r\n        const UNIT = source ? source._unit : '';\r\n    \r\n        if (!first) return;\r\n\r\n        if (+second) {\r\n            if (+first) {\r\n                return +(first / second * 100).toFixed(2) + '%';\r\n            }\r\n            else {\r\n                return createColor(this.ctx, first, second)\r\n            }\r\n        }\r\n    \r\n        if (is.var(first)) {\r\n            return createColor(this.ctx, first)\r\n        }\r\n    \r\n        if (is.arr(UNIT)) {\r\n            return +item ? item + (UNIT[index] || \"\") : item;\r\n        }\r\n        \r\n        return +item && UNIT ? item + UNIT: item;\r\n    }\r\n    \r\n    /*\r\n      (num/num) 1/2 = 50%\r\n      (var/num) $foo/50 = foo in blick.colors ? #xxxxxxaa : var(--foo);opacity:0.5 \r\n      (str/num) red/50 = #ff000080\r\n    \r\n      (num) 15 = 15 + (unit || \"\")\r\n      (var) $foo = var(--foo)\r\n      (str) 5em = 5em\r\n    */\r\n    \r\n    parse(value = '', source = {}) {\r\n        if (!value) return null;\r\n        const S = this.ctx.divisionSymbol\r\n        const RE_SPLIT = new RegExp(`([^${S}\\\\\\\\])\\\\${S}`, 'g')\r\n    \r\n        if (!is.arr(value)) {  \r\n            value = value.replace(RE_SPLIT, \"$1\\n\").split(\"\\n\")\r\n        }\r\n\r\n        let values = value.map((item, index) => {\r\n            item = item.toString()\r\n            const STATIC = source._vals ? source._vals[item] : null\r\n\r\n            if (STATIC) {\r\n                return { val: STATIC, raw: item };\r\n            }\r\n\r\n            const DYNAMIC = this.getItem(item, source, index)\r\n\r\n            if (DYNAMIC) {\r\n                return { val: DYNAMIC.replace(/\\\\/g, ''), raw: item };\r\n            }\r\n            \r\n        })\r\n    \r\n        if (values.filter(e => e).length) {\r\n            return values\r\n        }\r\n    \r\n        return null\r\n    }\r\n}", "import { RuleParser } from './parse-rule.js';\r\nimport { ValueParser } from './parse-value.js';\r\nimport { is } from '../check-type.js';\r\n// import context from '../../context.js';\r\n\r\nexport class StylesParser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n        this.parseValue = new ValueParser(ctx);\r\n        this.parseRule = new RuleParser(ctx);\r\n    }\r\n\r\n    parse(style, attr, token, states) {\r\n        let target = null;\r\n        let declaration = null;\r\n        let values = null;\r\n        let important = false;\r\n        let parsed_value = null\r\n\r\n        if (attr == \"class\") {\r\n            target = this.ctx.class\r\n        }\r\n        else {\r\n            target = this.ctx.attr[attr]\r\n        }\r\n\r\n        style = style.replace(/!/g, () => {\r\n            important = true\r\n            return \"\"\r\n        })\r\n            \r\n        let { source, path, value } = this.parseRule.parse(style, target);\r\n\r\n        const params = {\r\n            token,\r\n            style,\r\n            path,\r\n            value,\r\n            source,\r\n            attr,\r\n            important,\r\n            parseValue: (src) => this.parseValue.parse(value, src)\r\n        }\r\n\r\n        /* _else func for attr where no data (flex=\"20\" or text=\"red\") */\r\n        if (!source && attr !== 'class') {\r\n            /* \r\n                { sourse } -> { _prop: \"color:$\" } \r\n                one -> \"color: red\" \r\n            */\r\n            if (!is.func(target._else)) return null\r\n            source = target._else(params);\r\n        }\r\n\r\n        if (!source) return;\r\n\r\n        \r\n        // convert function to source\r\n        if (is.func(source)) {\r\n            source = source(params)\r\n            \r\n            if (!source) return;\r\n\r\n            if (value) {\r\n                let rule = this.parseRule.parse(value, source)\r\n            \r\n                if (rule.source) {\r\n                    value = rule.value\r\n                    source = rule.source\r\n                    path.push(...rule.path)\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (value) {\r\n            declaration = source._prop || source\r\n            values = this.parseValue.parse(source._values || value, source);\r\n\r\n            if (!values) return null;\r\n        }\r\n        else {\r\n            declaration = source._one || source;\r\n        }\r\n\r\n        if (!is.str(declaration)) return null\r\n\r\n        declaration = declaration.toString().trim()\r\n\r\n        return {\r\n            src:    source,\r\n            path:   path,\r\n            prop:   declaration,\r\n            values: values,\r\n            rawVal: value,\r\n            val:    values ? values.map((e) => e.val).join(source._join || ' ') : null,\r\n            unit:   source._unit || '',\r\n            join:   source._join || ' ',\r\n            important,\r\n        };\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export function CreateStylesParser(ctx) {\r\n\r\n//     const parseValue = CreateValueParser(ctx)\r\n//     const parseRule = CreateRuleParser(ctx)\r\n\r\n//     return function(style, attr, token, states) {\r\n\r\n//         let object = ctx.attr[attr] || ctx.class;\r\n//         let property = null;\r\n//         let values = null;\r\n//         let important = false;\r\n\r\n//         if (style.includes(\"!\")) {\r\n//             style = style.replace(/!/g, '');\r\n//             important = true\r\n//         }\r\n\r\n//         let { source, path, value } = parseRule(style, object);\r\n\r\n//         if (!source && attr !== 'class') {\r\n//             /*\r\n//                 [{sourse}, [values]]\r\n//                 [prop, [values]]\r\n//                 [{sourse}, values]\r\n//                 [prop, values]\r\n//                 prop\r\n//             */\r\n//             let _else = object._else?.({style, token, states})\r\n\r\n//             if (is.arr(_else)) {\r\n//                 let [s, v] = _else || [null, null];\r\n//                 source = is.obj(s) ? s : { _prop: s };\r\n//                 value = v || style;\r\n//             }\r\n//             else if (is.obj(_else)) {\r\n//                 source = _else;\r\n//                 value = style;\r\n//             }\r\n//             else {\r\n//                 source = { _prop: _else };\r\n//                 value = style;\r\n//             }\r\n//         }\r\n\r\n//         if (!source) return;\r\n\r\n//         if (value) {\r\n//             property = source._prop;\r\n//             values = parseValue(value, source);\r\n\r\n//             if (!values) {\r\n//                 return null\r\n//             }\r\n//         } else {\r\n//             property = source._one || source;\r\n//         }\r\n\r\n//         if (!property || is.obj(property)) {\r\n//             return null;\r\n//         }\r\n\r\n//         return {\r\n//             src: source,\r\n//             path: path,\r\n//             prop: property,\r\n//             values: values,\r\n//             rawVal: value,\r\n//             val: values?.map((e) => e.val).join(source._join || ' ') || null,\r\n//             unit: source._unit || '',\r\n//             join: source._join || ' ',\r\n//             important\r\n//         };\r\n//     }\r\n// }\r\n", "import { is } from './check-type.js';\r\nimport { escape } from '../helpers/escape.js'\r\n// import { parser } from './parser/index.js';\r\n\r\nconst re = {\r\n    group: /\\$(\\d+)?/g,\r\n    space: /^\\s*(.+?):\\s*/,\r\n    rule: /([^:]+):([^;]+);?/g\r\n}\r\n\r\nexport function createRule(STRUCT) {\r\n    if (!STRUCT) return null;\r\n    \r\n    const MEDIA = [];\r\n    const DECLARED = [];\r\n\r\n    if (STRUCT.states) {\r\n        for (let i = STRUCT.states.length - 1; i >= 0; i--) {\r\n            const state = STRUCT.states[i];\r\n\r\n            if (state.type === 'pseudo') {\r\n                if (is.func(state.val)) {\r\n                    STRUCT.selector = state.val(STRUCT.selector);\r\n                }\r\n                else if (state.val?.includes('$')) {\r\n                    STRUCT.selector = state.val.replace('$', STRUCT.selector);\r\n                }\r\n                else {\r\n                    STRUCT.selector += state.val;\r\n                }\r\n            }\r\n            else if (state.type === 'media') {\r\n                MEDIA.push(state);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (STRUCT.extra && is.str(STRUCT.extra)) {\r\n        STRUCT.selector = STRUCT.extra.replace(/\\$/g, STRUCT.selector )\r\n    }\r\n\r\n    for (let rule of STRUCT.styles) {\r\n        let style = rule.prop;\r\n        let important = rule.important ? \"!important\" : \"\";\r\n        \r\n        if (rule.values) {\r\n            style = rule.prop.replace(re.group, (_, group) => {\r\n                if (!group) {\r\n                    return rule.val || rule.rawVal\r\n                }\r\n                \r\n                let vals = rule.values[group - 1] ?? rule.values[0]\r\n                let unit = rule.unit?.[group - 1] ?? rule.unit?.[0] ?? rule.unit\r\n    \r\n                return vals.val || vals.raw || (+vals ? vals + (unit || \"\") : vals)\r\n            });\r\n        }\r\n        else {\r\n            style = style._one || style\r\n        }\r\n\r\n        if (!style || !is.str(style)) {\r\n            return null\r\n        }\r\n\r\n        style = style.replace(re.rule, (_, prop, val) => {\r\n            return (\r\n                `${prop.trim()}:${val.trim()}${important ? \" !important\" : \"\"};`\r\n            )\r\n        })\r\n            \r\n        if (style[style.length-1] == \";\") {\r\n            style = style.slice(0, -1)\r\n        }\r\n        \r\n        DECLARED.push(escape(style, \"_\").replace(\" \"));\r\n    }\r\n\r\n    return {\r\n        media: MEDIA.length ? MEDIA : null,\r\n        selector: STRUCT.selector,\r\n        styles: DECLARED,\r\n\r\n        css() {\r\n            return `${STRUCT.selector}{${this.styles.join(\";\")}}`\r\n        }\r\n    }\r\n}", "import formatSelector from '../format-selector.js';\r\n\r\nimport { is } from '../check-type.js';\r\nimport { StatesParser } from './parse-states.js';\r\nimport { StylesParser } from './parse-styles.js';\r\nimport { createRule   } from '../create-rule.js';\r\nimport { escape } from '../../helpers/escape.js';\r\n\r\n\r\nexport class Parser {\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n        this.parseStates = new StatesParser(ctx)\r\n        this.parseStyles = new StylesParser(ctx)\r\n    }\r\n\r\n    parse(token = '', attr = 'class') {\r\n        // let [styles, ...states] = token.split(/(?<!\\\\):/g).reverse();\r\n        let [styles, ...states] = escape(token, \":\").split().reverse()\r\n        let selector = formatSelector(token, attr);\r\n        let rawSelector = selector;\r\n\r\n        states = states.map((e) => this.parseStates.parse(e, attr, token));\r\n        // styles = styles.split(/(?<!\\\\);/g);\r\n        styles = escape(styles, \";\").split()\r\n        styles = styles.map((e) => this.parseStyles.parse(e, attr, token, states));\r\n        styles = styles.filter((e) => e);\r\n\r\n        if (!states.length) {\r\n            states = null;\r\n        };\r\n\r\n        if (styles.length) {\r\n            const EXTRA_SELECTOR = (styles[0].src || 0)._selector || null;\r\n\r\n            // if (EXTRA_SELECTOR && is.str(EXTRA_SELECTOR)) {\r\n            //     selector = EXTRA_SELECTOR.replace(/\\$/g, selector);\r\n            // }\r\n\r\n            return {\r\n                states,\r\n                styles,\r\n                attr,\r\n                selector,\r\n                token,\r\n                extra: EXTRA_SELECTOR,\r\n\r\n                create() {\r\n                    return createRule(this);\r\n                },\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n", "export function CreateStore() {\r\n    let STYLE_STORE = Object.create(null);\r\n    let ATTRS_STORE = Object.create(null);\r\n    let MEDIA_STORE = Object.create(null);\r\n    let CSS_STORE   = Object.create(null);\r\n\r\n    CSS_STORE.MEDIA = {};\r\n\r\n    return {\r\n        STYLE_STORE,\r\n        ATTRS_STORE,\r\n        MEDIA_STORE,\r\n        CSS_STORE,\r\n    }\r\n}\r\n", "export function CreateAttrFlex() {\r\n    const c_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        sb: 'space-between',\r\n        sa: 'space-around',\r\n        se: 'space-evenly',\r\n    };\r\n    const i_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        st: 'stretch',\r\n    };\r\n    \r\n    return {\r\n        _name: 'flex',\r\n        _using: \"display:flex\",\r\n    \r\n        _else: function (e) {\r\n            if (!isNaN(+e.style[0])) {\r\n                return { _prop: 'gap:$', _unit: 'px' };\r\n            }\r\n        },\r\n        col: {\r\n            _one: 'flex-direction:column',\r\n            start: 'flex-direction:column;align-items:flex-start',\r\n            center: 'flex-direction:column;align-items:center',\r\n            end: 'flex-direction:column;align-items:flex-end',\r\n            rev: 'flex-direction:column-reverse',\r\n        },\r\n        row: {\r\n            _one: 'flex-direction:row',\r\n            start: 'flex-direction:row;justify-content:flex-start',\r\n            center: 'flex-direction:row;justify-content:center',\r\n            end: 'flex-direction:row;justify-content:flex-end',\r\n            rev: 'flex-direction:row-reverse',\r\n        },\r\n        order: { _prop: 'order:$1' },\r\n        basis: { _prop: 'flex-basis:$' },\r\n        center: 'justify-content:center;align-items:center',\r\n        space: 'justify-content:space-between;align-items:center',\r\n        evenly: 'justify-content: space-evenly;align-items:center',\r\n        around: 'justify-content: space-around;align-items:center',\r\n        stretch: 'align-items:stretch',\r\n        grow: { _one: 'flex-grow:1', _prop: 'flex-grow:$' },\r\n        shrink: { _one: 'flex-shrink:1', _prop: 'flex-shrink:$' },\r\n    \r\n        start:  \"justify-content: flex-start\",\r\n        end:    \"justify-content: flex-end\",\r\n        top:    \"align-items: flex-start\",\r\n        bottom: \"align-items: flex-end\",\r\n    \r\n        wrap: {\r\n            _one: 'flex-wrap:wrap',\r\n            _prop: 'flex-wrap:$',\r\n            _vals: { rev: 'wrap-reverse' },\r\n        },\r\n        jc: {\r\n            _prop: 'justify-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ji: {\r\n            _prop: 'justify-items:$',\r\n            _vals: i_vals,\r\n        },\r\n        ac: {\r\n            _prop: 'align-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ai: {\r\n            _prop: 'align-items:$',\r\n            _vals: i_vals,\r\n        },\r\n    };\r\n    \r\n}", "export function CreateAttrGrid() {\r\n    const c_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        sb: 'space-between',\r\n        sa: 'space-around',\r\n        se: 'space-evenly',\r\n    };\r\n    const i_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        st: 'stretch',\r\n    };\r\n    \r\n    return {\r\n        _name: 'grid',\r\n        _using: \"display:grid\",\r\n    \r\n        _else: function (e) {\r\n            if (+e.style[0]) {\r\n                return { _prop: 'gap:$', _unit: 'px' }\r\n            }\r\n        },\r\n        cols: {\r\n            _prop: 'grid-template-columns:repeat($,1fr)',\r\n        },\r\n        rows: {\r\n            _prop: 'grid-template-rows:repeat($,1fr)',\r\n        },\r\n        jc: {\r\n            _prop: 'justify-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ji: {\r\n            _prop: 'justify-items:$',\r\n            _vals: i_vals,\r\n        },\r\n        ac: {\r\n            _prop: 'align-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ai: {\r\n            _prop: 'align-items:$',\r\n            _vals: i_vals,\r\n        },\r\n    };\r\n    \r\n}", "export function CreateAttrText() {\r\n    return {\r\n        _name: \"text\",\r\n        _else: function ({ style, states, token }) {\r\n            if (style.includes('/')) {\r\n                let [v1, v2, v3] = style.split('/');\r\n\r\n                if (+v1[0] && v3) {\r\n                    return {\r\n                        _prop: `font-size:$1;font-weight:$2;line-height:$3`,\r\n                        _unit: ['px', '', 'px'],\r\n                        _values: [v1, v2, v3]\r\n                    }\r\n                }\r\n                if (+v1[0]) {\r\n                    return {\r\n                        _prop: `font-size:$;font-weight:${v2}`,\r\n                        _unit: 'px',\r\n                        _values: [v1]\r\n                    }\r\n                }\r\n            } else {\r\n                if (+style[0]) {\r\n                    return {\r\n                        _prop: 'font-size:$',\r\n                        _unit: 'px'\r\n                    }\r\n                }\r\n            }\r\n    \r\n            return { _prop: 'color:$' }\r\n        },\r\n\r\n        100: 'font-weight:100',\r\n        200: 'font-weight:200',\r\n        300: 'font-weight:300',\r\n        400: 'font-weight:400',\r\n        500: 'font-weight:500',\r\n        600: 'font-weight:600',\r\n        700: 'font-weight:700',\r\n        800: 'font-weight:800',\r\n        900: 'font-weight:900',\r\n        \r\n        nowrap: 'white-space: nowrap',\r\n        \r\n        light:     'font-weight:300',\r\n        regular:   'font-weight:400',\r\n        medium:    'font-weight:500',\r\n        semibold:  'font-weight:600',\r\n        bold:      'font-weight:700',\r\n        extrabold: 'font-weight:800',\r\n    \r\n        tp:        'color:transparent!important',\r\n        thin:      'font-weight:lighter',\r\n        normal:    'font-weight:normal',\r\n        bolder:    'font-weight:bolder',\r\n        italic:    'font-style: italic',\r\n        delete:    'text-decoration-line:line-through',\r\n        line:      'text-decoration-line:underline',\r\n        overline:  'text-decoration-line:overline',\r\n        up:        'text-transform:uppercase',\r\n        low:       'text-transform:lowercase',\r\n        cap:       'text-transform:capitalize',\r\n        center:    'text-align:center',\r\n        left:      'text-align:left',\r\n        right:     'text-align:right',\r\n        justify:   'text-align:justify',\r\n    \r\n        mono:  'font-family:var(--font-mono)',\r\n        serif: 'font-family:var(--font-serif)',\r\n        sans:  'font-family:var(--font-sans)',\r\n    \r\n        vertical: 'writing-mode:vertical-lr',\r\n        wrap: 'word-wrap:break-word',\r\n        dots: 'overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%',\r\n        cols:   { _prop: 'columns:$'        },\r\n        lh:     { _prop: 'line-height:$'    },\r\n        wg:     { _prop: 'font-weight:$'    },\r\n        font:   { _prop: 'font-family:$'    },\r\n        align:  { _prop: 'vertical-align:$' },\r\n        space:  { _prop: 'white-space:$'    },\r\n        shadow: {\r\n            _one: 'text-shadow:3px 3px 2px #0000004d',\r\n            _prop: 'text-shadow:$',\r\n            _unit: 'px',\r\n        },\r\n        stroke: {\r\n            _prop: '-webkit-text-stroke:$',\r\n            _unit: 'px',\r\n        },\r\n        break: {\r\n            _prop: 'word-break:$',\r\n            _vals: {\r\n                all: 'break-all',\r\n                keep: 'keep-all'\r\n            }\r\n        },\r\n    };\r\n    \r\n}", "import { CreateAttrFlex } from \"./flex.js\";\r\nimport { CreateAttrGrid } from \"./grid.js\";\r\nimport { CreateAttrText } from \"./text.js\";\r\n\r\nexport function CreateAttrs() {\r\n    return {\r\n        flex: CreateAttrFlex(),\r\n        grid: CreateAttrGrid(),\r\n        text: CreateAttrText(),\r\n    }\r\n}", "import { CreateAttrText } from \"./attrs/text.js\";\r\n\r\n\r\nexport function CreateClasses(){\r\n\r\n    const w_vals = {\r\n        full: '100%',\r\n        half: '50%',\r\n        min: 'min-content',\r\n        fit: 'fit-content',\r\n        max: 'max-content',\r\n        screen: '100vw',\r\n    };\r\n    const h_vals = {\r\n        full: '100%',\r\n        half: '50%',\r\n        min: 'min-content',\r\n        fit: 'fit-content',\r\n        max: 'max-content',\r\n        screen: '100vh',\r\n    };\r\n    const c_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        sb: 'space-between',\r\n        sa: 'space-around',\r\n        se: 'space-evenly',\r\n    };\r\n    const i_vals = {\r\n        c: 'center',\r\n        bl: 'baseline',\r\n        s: 'start',\r\n        e: 'end',\r\n        st: 'stretch',\r\n    };\r\n    \r\n    const classes = {\r\n        m: {\r\n            _prop: 'margin:$',\r\n            _unit: 'px',\r\n        },\r\n        my: {\r\n            _prop: 'margin-top:$1;margin-bottom:$2',\r\n            _unit: 'px',\r\n        },\r\n        mx: {\r\n            _prop: 'margin-left:$1;margin-right:$2',\r\n            _unit: 'px',\r\n        },\r\n        mt: {\r\n            _prop: 'margin-top:$',\r\n            _unit: 'px',\r\n        },\r\n        mr: {\r\n            _prop: 'margin-right:$',\r\n            _unit: 'px',\r\n        },\r\n        mb: {\r\n            _prop: 'margin-bottom:$',\r\n            _unit: 'px',\r\n        },\r\n        ml: {\r\n            _prop: 'margin-left:$',\r\n            _unit: 'px',\r\n        },\r\n        ms: {\r\n            _prop: 'margin-inline-start:$',\r\n            _unit: 'px',\r\n        },\r\n        me: {\r\n            _prop: 'margin-inline-end:$',\r\n            _unit: 'px',\r\n        },\r\n        center: 'margin:auto',\r\n        p: {\r\n            _prop: 'padding:$',\r\n            _unit: 'px',\r\n        },\r\n        py: {\r\n            _prop: 'padding-top:$1;padding-bottom:$2',\r\n            _unit: 'px',\r\n        },\r\n        px: {\r\n            _prop: 'padding-left:$1;padding-right:$2',\r\n            _unit: 'px',\r\n        },\r\n        pt: {\r\n            _prop: 'padding-top:$',\r\n            _unit: 'px',\r\n        },\r\n        pr: {\r\n            _prop: 'padding-right:$',\r\n            _unit: 'px',\r\n        },\r\n        pb: {\r\n            _prop: 'padding-bottom:$',\r\n            _unit: 'px',\r\n        },\r\n        pl: {\r\n            _prop: 'padding-left:$',\r\n            _unit: 'px',\r\n        },\r\n        ps: {\r\n            _prop: 'padding-inline-start:$',\r\n            _unit: 'px',\r\n        },\r\n        pe: {\r\n            _prop: 'padding-inline-end:$',\r\n            _unit: 'px',\r\n        },\r\n        space: {\r\n            _prop: 'margin-left:$',\r\n            _selector: '$>*+*',\r\n            _unit: 'px',\r\n            x: { _prop: 'margin-left:$', _selector: '$>*+*', _unit: 'px' },\r\n            y: { _prop: 'margin-top:$', _selector: '$>*+*', _unit: 'px' },\r\n        },\r\n        b: {\r\n            _prop: 'border-width:$',\r\n            _unit: 'px',\r\n        },\r\n        bt: {\r\n            _prop: 'border-top-width:$',\r\n            _unit: 'px',\r\n        },\r\n        br: {\r\n            _prop: 'border-right-width:$',\r\n            _unit: 'px',\r\n        },\r\n        bb: {\r\n            _prop: 'border-bottom-width:$',\r\n            _unit: 'px',\r\n        },\r\n        bl: {\r\n            _prop: 'border-left-width:$',\r\n            _unit: 'px',\r\n        },\r\n        bc: {\r\n            _prop: 'border-color:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        bs: {\r\n            _prop: 'border-style:$',\r\n        },\r\n        border: {\r\n            _one: 'border:1px solid',\r\n            _prop: 'border:$',\r\n            _unit: 'px',\r\n        },\r\n        outline: {\r\n            _prop: 'outline:$',\r\n            _unit: 'px',\r\n        },\r\n        fill: {\r\n            _prop: 'fill:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        stroke: {\r\n            _prop: 'stroke:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        unappearance: 'appearance:none',\r\n        unapp: 'appearance:none',\r\n        scale: {\r\n            _prop: 'scale:$',\r\n        },\r\n        rotate: {\r\n            _prop: 'rotate:$',\r\n            _unit: 'deg',\r\n        },\r\n        translate: {\r\n            _prop: 'translate:$',\r\n            _unit: 'px',\r\n        },\r\n        skew: {\r\n            _prop: 'transform:skew($)',\r\n            _unit: 'deg',\r\n            _join: ',',\r\n            x: {\r\n                _prop: 'transform:skewX($)',\r\n                _unit: 'deg',\r\n            },\r\n            y: {\r\n                _prop: 'transform:skewY($)',\r\n                _unit: 'deg',\r\n            },\r\n        },\r\n        flip: {\r\n            _one: 'scale:-1 -1',\r\n            _prop: 'scale:$',\r\n            _vals: {\r\n                x: '-1 1',\r\n                y: '1 -1',\r\n            },\r\n        },\r\n        clamp: {\r\n            _prop: 'overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:$',\r\n        },\r\n        inset: {\r\n            _prop: 'inset:$',\r\n            x: { _prop: 'left:$;right:$' },\r\n            y: { _prop: 'top:$;bottom:$' },\r\n        },\r\n        start: { _prop: 'inset-inline-start:$' },\r\n        end: { _prop: 'inset-inline-end:$' },\r\n        tf: {\r\n            _prop: 'transform:$',\r\n            \r\n            scale: {\r\n                _prop: 'transform:scale($)',\r\n                _join: ',',\r\n                '3d': {\r\n                    _prop: 'transform:scale3d($)',\r\n                    _join: ',',\r\n                },\r\n                x: {\r\n                    _prop: 'transform:scaleX($)',\r\n                },\r\n                y: {\r\n                    _prop: 'transform:scaleY($)',\r\n                },\r\n                z: {\r\n                    _prop: 'transform:scalez($)',\r\n                },\r\n            },\r\n    \r\n            rotate: {\r\n                _prop: 'transform:rotate($)',\r\n                _unit: 'deg',\r\n                '3d': {\r\n                    _prop: 'transform:rotate3d($)',\r\n                    _join: ',',\r\n                },\r\n                x: {\r\n                    _prop: 'transform:rotateX($)',\r\n                    _unit: 'deg',\r\n                },\r\n                y: {\r\n                    _prop: 'transform:rotateY($)',\r\n                    _unit: 'deg',\r\n                },\r\n                z: {\r\n                    _prop: 'transform:rotateZ($)',\r\n                    _unit: 'deg',\r\n                },\r\n            },\r\n    \r\n            translate: {\r\n                _prop: 'transform:translate($)',\r\n                _unit: 'px',\r\n                _join: ',',\r\n                '3d': {\r\n                    _prop: 'transform:translate3d($)',\r\n                    _unit: 'px',\r\n                    _join: ',',\r\n                },\r\n                x: {\r\n                    _prop: 'transform:translateX($)',\r\n                    _unit: 'px',\r\n                },\r\n                y: {\r\n                    _prop: 'transform:translateY($)',\r\n                    _unit: 'px',\r\n                },\r\n                z: {\r\n                    _prop: 'transform:translateZ($)',\r\n                    _unit: 'px',\r\n                },\r\n            },\r\n    \r\n            skew: {\r\n                _prop: 'transform:skew($)',\r\n                _unit: 'deg',\r\n                x: {\r\n                    _prop: 'transform:skewX($)',\r\n                    _unit: 'deg',\r\n                },\r\n                y: {\r\n                    _prop: 'transform:skewY($)',\r\n                    _unit: 'deg',\r\n                },\r\n            }\r\n        },\r\n        w: {\r\n            _prop: 'width:$',\r\n            _vals: w_vals,\r\n            _unit: 'px',\r\n        },\r\n        h: {\r\n            _prop: 'height:$',\r\n            _vals: h_vals,\r\n            _unit: 'px',\r\n        },\r\n        sq: {\r\n            _prop: 'width:$1;height:$2',\r\n            _vals: { full: '100%' },\r\n            _unit: 'px',\r\n        },\r\n        max: {\r\n            w: {\r\n                _prop: 'max-width:$',\r\n                _vals: w_vals,\r\n                _unit: 'px',\r\n            },\r\n            h: {\r\n                _prop: 'max-height:$',\r\n                _vals: h_vals,\r\n                _unit: 'px',\r\n            },\r\n        },\r\n        min: {\r\n            w: {\r\n                _prop: 'min-width:$',\r\n                _vals: w_vals,\r\n                _unit: 'px',\r\n            },\r\n            h: {\r\n                _prop: 'min-height:$',\r\n                _vals: h_vals,\r\n                _unit: 'px',\r\n            },\r\n        },\r\n        minW: {\r\n            _prop: 'min-width:$',\r\n            _vals: w_vals,\r\n            _unit: 'px',\r\n        },\r\n        minH: {\r\n            _prop: 'min-height:$',\r\n            _vals: h_vals,\r\n            _unit: 'px',\r\n        },\r\n        maxW: {\r\n            _prop: 'max-width:$',\r\n            _vals: w_vals,\r\n            _unit: 'px',\r\n        },\r\n        maxH: {\r\n            _prop: 'max-height:$',\r\n            _vals: h_vals,\r\n            _unit: 'px',\r\n        },\r\n        d: {\r\n            _prop: 'display:$',\r\n            _vals: {\r\n                inblock: 'inline-block',\r\n                inflex: 'inline-flex',\r\n                ingrid: 'inline-grid',\r\n            },\r\n        },\r\n        table: {\r\n            _one: 'display:table',\r\n            _prop: 'display:table-$',\r\n        },\r\n        inline: 'display:inline',\r\n        block: 'display:block',\r\n        inblock: 'display:inline-block',\r\n        inflex: 'display:inline-flex',\r\n        ingrid: 'display:inline-grid',\r\n        hide: 'display:none',\r\n        hidden: 'display:none',\r\n        upper: 'text-transform:uppercase',\r\n        uppercase: 'text-transform:uppercase',\r\n        lower: 'text-transform:lowercase',\r\n        lowercase: 'text-transform:lowercase',\r\n        capit: 'text-transform:capitalize',\r\n        capitalize: 'text-transform:capitalize',\r\n        pos: {\r\n            _prop: 'position:$',\r\n        },\r\n        static: 'position:static',\r\n        abs: 'position:absolute',\r\n        absolute: 'position:absolute',\r\n        rel: 'position:relative',\r\n        relative: 'position:relative',\r\n        sticky: 'position:sticky',\r\n        fixed: 'position:fixed',\r\n        r: {\r\n            _prop: 'border-radius:$',\r\n            _unit: 'px',\r\n        },\r\n        round: {\r\n            _one: 'border-radius:9999px',\r\n            _prop: 'border-radius:$',\r\n            _unit: 'px',\r\n        },\r\n        sharp: 'border-radius:0',\r\n        transition: {\r\n            _prop: 'transition:$',\r\n            _unit: 'ms',\r\n        },\r\n        time: {\r\n            _prop: 'transition:$',\r\n            _unit: 'ms',\r\n        },\r\n        select: {\r\n            _prop: 'user-select:$',\r\n        },\r\n        fit: {\r\n            _prop: 'object-fit:$',\r\n            top: 'object-position:top',\r\n            bottom: 'object-position:bottom',\r\n            center: 'object-position:center',\r\n            left: {\r\n                _one: 'object-position:left',\r\n                _prop: 'object-position:left $',\r\n            },\r\n            right: {\r\n                _one: 'object-position:right',\r\n                _prop: 'object-position:right $',\r\n            },\r\n        },\r\n        bg: {\r\n            _prop: 'background:$',\r\n            tp: 'background-color:transparent',\r\n            cc: 'background-color:currentcolor',\r\n            f: 'background-color:#fff',\r\n            0: 'background-color:#000',\r\n            fixed: 'background-attachment:fixed',\r\n            local: 'background-attachment:local',\r\n            scroll: 'background-attachment:scroll',\r\n            clip: {\r\n                border: 'background-clip:border-box',\r\n                padding: 'background-clip:padding-box',\r\n                content: 'background-clip:content-box',\r\n                text: 'background-clip:text',\r\n            },\r\n            origin: {\r\n                border: 'background-origin:border-box',\r\n                padding: 'background-origin:padding-box',\r\n                content: 'background-origin:content-box',\r\n            },\r\n            pos: {\r\n                _prop: 'background-position:$',\r\n                x: { _prop: 'background-position-x:$' },\r\n                y: { _prop: 'background-position-y:$' },\r\n            }\r\n        },\r\n        bgp: {\r\n            _prop: 'background-position:$',\r\n            x: { _prop: 'background-position-x:$' },\r\n            y: { _prop: 'background-position-y:$' },\r\n        },\r\n        c: {\r\n            _prop: 'color:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        accent: {\r\n            _prop: 'accent-color:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        caret: {\r\n            _prop: 'caret-color:$',\r\n            _vals: {\r\n                f: '#fff',\r\n                0: '#000',\r\n                tp: 'transparent',\r\n                cc: 'currentcolor',\r\n            },\r\n        },\r\n        over: {\r\n            _prop: 'overflow:$',\r\n            x: {\r\n                _prop: 'overflow-x:$',\r\n            },\r\n            y: {\r\n                _prop: 'overflow-y:$',\r\n            },\r\n        },\r\n        snap: {\r\n            x: 'scroll-snap-type:x mandatory',\r\n            y: 'scroll-snap-type:y mandatory',\r\n            start: 'scroll-snap-align:start',\r\n            center: 'scroll-snap-align:center',\r\n            end: 'scroll-snap-align:end',\r\n            stop: 'scroll-snap-stop: always',\r\n        },\r\n        shadow: {\r\n            box: {\r\n                _prop: 'box-shadow:$',\r\n                _one: 'box-shadow:3px 4px 3px #0000004d',\r\n                _unit: 'px',\r\n            },\r\n            text: {\r\n                _prop: 'text-shadow:$',\r\n                _one: 'text-shadow:3px 4px 3px #0000004d',\r\n                _unit: 'px',\r\n            },\r\n        },\r\n        cursor: {\r\n            _prop: 'cursor:$', \r\n        },\r\n        resize: {\r\n            _prop: 'resize:$',\r\n            _vals: {\r\n                x: 'horizontal',\r\n                y: 'vertical',\r\n            },\r\n        },\r\n        top: {\r\n            _prop: 'top:$',\r\n            _unit: 'px',\r\n        },\r\n        right: {\r\n            _prop: 'right:$',\r\n            _unit: 'px',\r\n        },\r\n        bottom: {\r\n            _prop: 'bottom:$',\r\n            _unit: 'px',\r\n        },\r\n        left: {\r\n            _prop: 'left:$',\r\n            _unit: 'px',\r\n        },\r\n        ratio: e => {\r\n            if (!e.value) return\r\n\r\n            let _vals = {\r\n                sqr: '1 / 1',\r\n                vid: '16 / 9',\r\n            }\r\n\r\n            return `aspect-ratio:${\r\n                _vals[e.value] || e.value.replace(\"/\", \" / \")\r\n            }`\r\n        },\r\n        box: {\r\n            _prop: 'box-sizing:$',\r\n            _vals: {\r\n                content: 'content-box',\r\n                border: 'border-box',\r\n            },\r\n            decoration: { _prop: 'box-decoration-break:$' },\r\n        },\r\n    \r\n        float: {\r\n            _prop: 'float:$',\r\n        },\r\n        clear: {\r\n            _prop: 'clear:$',\r\n            _vals: {\r\n                x: 'horizontal',\r\n                y: 'vertical',\r\n            },\r\n        },\r\n        z: {\r\n            _prop: 'z-index:$',\r\n        },\r\n        visible: 'visibility:visible',\r\n        invisible: 'visibility:hidden',\r\n        collapse: 'visibility:collapse',\r\n        opacity: ({ value }) => {\r\n            return \"opacity:0.5\"\r\n            return `opacity:${value > 1 ? value / 100 : value}`\r\n        },\r\n        blend: {\r\n            _prop: 'mix-blend-mode:$',\r\n        },\r\n        hue: {\r\n            _prop: 'filter:hue-rotate($)',\r\n            _unit: 'deg',\r\n        },\r\n        invert: {\r\n            _one: 'filter:invert(1)',\r\n            _prop: 'filter:invert($)',\r\n        },\r\n        blur: {\r\n            _prop: 'filter:blur($)',\r\n            _unit: 'px',\r\n        },\r\n        brightness: {\r\n            _prop: 'filter:brightness($)',\r\n        },\r\n        contrast: {\r\n            _prop: 'filter:contrast($)',\r\n        },\r\n        saturate: {\r\n            _prop: 'filter:saturate($)',\r\n        },\r\n        grayscale: {\r\n            _prop: 'filter:grayscale($)',\r\n            _unit: '%',\r\n        },\r\n        sepia: {\r\n            _prop: 'filter:sepia($)',\r\n            _unit: '%',\r\n        },\r\n        isolate: 'isolation:isolate',\r\n        isolation: { _prop: 'isolation:$' },\r\n        pointer: 'cursor:pointer',\r\n        ws: {\r\n            _prop: 'white-space:$',\r\n        },\r\n        list: {\r\n            _prop: 'list-style:$',\r\n            item: 'display:list-item',\r\n        },\r\n        spacing: {\r\n            _prop: 'letter-spacing:$',\r\n            _unit: 'px',\r\n        },\r\n        fs: {\r\n            _prop: 'font-size:$',\r\n            _unit: 'px',\r\n        },\r\n        fsz: {\r\n            _prop: 'font-size:$',\r\n            _unit: 'px',\r\n        },\r\n        fst: {\r\n            _prop: 'font-style:$',\r\n        },\r\n        italic: 'font-style:italic',\r\n        fw: {\r\n            _prop: 'font-weight:$',\r\n        },\r\n        extrathin: 'font-weight:100',\r\n        thin: 'font-weight:200',\r\n        light: 'font-weight:300',\r\n        regular: 'font-weight:400',\r\n        medium: 'font-weight:500',\r\n        semibold: 'font-weight:600',\r\n        bold: 'font-weight:700',\r\n        extrabold: 'font-weight:800',\r\n        fv: {\r\n            _prop: 'font-variant:$',\r\n        },\r\n        ff: {\r\n            _prop: 'font-family:$',\r\n            _vals: {\r\n                sans: 'var(--font-sans)',\r\n                serif: 'var(--font-serif)',\r\n                mono: 'var(--font-mono)',\r\n            },\r\n        },\r\n        lh: {\r\n            _prop: 'line-height:$',\r\n        },\r\n        ta: {\r\n            _prop: 'text-align:$',\r\n        },\r\n        underline: 'text-decoration:underline',\r\n        td: {\r\n            _prop: 'text-decoration:$',\r\n            _vals: {\r\n                line: 'underline',\r\n            },\r\n            _unit: 'px',\r\n        },\r\n        wb: {\r\n            _prop: 'word-break:$',\r\n            _vals: {\r\n                all: 'break-all',\r\n                keep: 'keep-all',\r\n            },\r\n        },\r\n        break: {\r\n            _prop: 'word-break:$',\r\n            _vals: {\r\n                all: 'break-all',\r\n                keep: 'keep-all',\r\n            },\r\n            after: { _prop: 'break-after:$' },\r\n            before: { _prop: 'break-before:$' },\r\n            inside: { _prop: 'break-inside:$' },\r\n        },\r\n        grad: {\r\n            _prop: 'background:linear-gradient($)',\r\n            _unit: 'deg',\r\n            _join: ',',\r\n        },\r\n        fullscreen: 'position:absolute;left:0;top:0;width:100%;height:100%',\r\n        flex: (e) => {\r\n            let _vals = {\r\n                1: '1 1 0%',\r\n                auto: '1 1 auto',\r\n                initial: '0 1 auto',\r\n            } \r\n            return {\r\n                _one: 'display:flex',\r\n                _prop: \r\n                    `${\r\n                        e.value in _vals || (e.value && !+e.value[0]) \r\n                            ? 'flex' \r\n                            : 'gap'\r\n                    }:$`\r\n                ,\r\n                _vals,\r\n                _unit: 'px',\r\n                center: 'justify-content:center;align-items:center',\r\n                col: {\r\n                    _one: 'flex-direction:column',\r\n                    rev: 'flex-direction:column-reverse',\r\n                },\r\n                row: {\r\n                    _one: 'flex-direction:row',\r\n                    rev: 'flex-direction:row-reverse',\r\n                },\r\n                space: 'justify-content:space-between;align-items:center',\r\n                evenly: 'justify-content:space-evenly;align-items:center',\r\n                around: 'justify-content:space-around;align-items:center',\r\n                wrap: {\r\n                    _one: 'flex-wrap:wrap',\r\n                    rev: 'flex-wrap:wrap-reverse',\r\n                },\r\n                nowrap: 'flex-wrap:nowrap',\r\n                stretch: 'align-items:stretch',\r\n                start: {\r\n                    _one: \"justify-content:flex-start\",\r\n                    top: \"justify-content:flex-start;align-items:flex-start\",\r\n                    center: \"justify-content:flex-start;align-items:center\",\r\n                    bottom: \"justify-content:flex-start;align-items:flex-end\",\r\n                },\r\n                end: {\r\n                    _one: \"justify-content:flex-end\",\r\n                    top: \"justify-content:flex-end;align-items:flex-start\",\r\n                    center: \"justify-content:flex-end;align-items:center\",\r\n                    bottom: \"justify-content:flex-end;align-items:flex-end\",\r\n                },\r\n                top: {\r\n                    _one:   \"align-items:flex-start\",\r\n                    start: \"justify-content:flex-start;align-items:flex-start\",\r\n                    center: \"justify-content:center;align-items:flex-start\",\r\n                    end: \"justify-content:flex-end;align-items:flex-start\",\r\n                },\r\n                bottom: {\r\n                    _one:   \"align-items:flex-end\",\r\n                    start: \"justify-content:flex-start;align-items:flex-end\",\r\n                    center: \"justify-content:center;align-items:flex-end\",\r\n                    end: \"justify-content:flex-end;align-items:flex-end\",\r\n                },\r\n            }\r\n        },\r\n        col: {\r\n            _one: 'flex-direction:column',\r\n            rev: 'flex-direction:column-reverse',\r\n            _prop: 'grid-column:$',\r\n            span: {\r\n                _prop: 'grid-column:span $ / span $',\r\n                full: 'grid-column:1 / -1',\r\n            },\r\n            start: { _prop: 'grid-column-start:$' },\r\n            end: { _prop: 'grid-column-end:$' },\r\n        },\r\n        row: {\r\n            _one: 'flex-direction:row',\r\n            rev: 'flex-direction:row-reverse',\r\n            _prop: 'grid-row:$',\r\n            span: {\r\n                _prop: 'grid-row:span $ / span $',\r\n                full: 'grid-row:1 / -1',\r\n            },\r\n            start: { _prop: 'grid-row-start:$' },\r\n            end: { _prop: 'grid-row-end:$' },\r\n        },\r\n        flow: {\r\n            _prop: 'grid-auto-flow:$',\r\n            _vals: {\r\n                col: 'column',\r\n                'col-dense': 'column dense',\r\n                'row dense': 'row dense',\r\n            },\r\n        },\r\n        auto: {\r\n            cols: {\r\n                _prop: 'grid-auto-columns:$',\r\n                _vals: {\r\n                    min: 'min-content',\r\n                    max: 'max-content',\r\n                    fr: 'minmax(0,1fr)',\r\n                },\r\n            },\r\n            rows: {\r\n                _prop: 'grid-auto-rows:$',\r\n                _vals: {\r\n                    min: 'min-content',\r\n                    max: 'max-content',\r\n                    fr: 'minmax(0,1fr)',\r\n                },\r\n            },\r\n        },\r\n        gap: {\r\n            _prop: 'gap:$',\r\n            _unit: 'px',\r\n            x: {\r\n                _prop: 'column-gap:$',\r\n                _unit: 'px',\r\n            },\r\n            y: {\r\n                _prop: 'row-gap:$',\r\n                _unit: 'px',\r\n            },\r\n        },\r\n        jc: {\r\n            _prop: 'justify-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ji: {\r\n            _prop: 'justify-items:$',\r\n            _vals: i_vals,\r\n        },\r\n        js: {\r\n            _prop: 'justify-self:$',\r\n            _vals: i_vals,\r\n        },\r\n        ac: {\r\n            _prop: 'align-content:$',\r\n            _vals: c_vals,\r\n        },\r\n        ai: {\r\n            _prop: 'align-items:$',\r\n            _vals: i_vals,\r\n        },\r\n        as: {\r\n            _prop: 'align-self:$',\r\n            _vals: i_vals,\r\n        },\r\n        order: {\r\n            _prop: 'order:$',\r\n            _vals: {\r\n                first: '-9999',\r\n                last: '9999',\r\n                none: '0',\r\n            },\r\n        },\r\n        basis: {\r\n            _prop: 'flex-basis:$',\r\n        },\r\n        grow: {\r\n            _one: 'flex-grow:1',\r\n            _prop: 'flex-grow:$',\r\n        },\r\n        shrink: {\r\n            _one: 'flex-shrink:1',\r\n            _prop: 'flex-shrink:$',\r\n        },\r\n        grid: {\r\n            _one: 'display:grid',\r\n            cols: {\r\n                _prop: 'grid-template-columns:repeat($,1fr)',\r\n            },\r\n            rows: {\r\n                _prop: 'grid-template-rows:repeat($,1fr)',\r\n            },\r\n        },\r\n        sw: {\r\n            _prop: 'stroke-width: $',\r\n            _unit: 'px',\r\n        },\r\n        \r\n        text: e => {\r\n            if (!e.value) return \r\n\r\n            let data = {\r\n                _unit: [\"px\", \"\", \"px\"],\r\n                ...CreateAttrText()\r\n            }\r\n            \r\n            let [v1, v2, v3] = e.value.split('/');\r\n\r\n            if (+v1[0] && v3) {\r\n                data._prop = `font-size:$1;font-weight:$2;line-height:$3`\r\n                data._values = [v1, v2, v3]\r\n                return data\r\n            }\r\n            if (+v1[0] && v2) {\r\n                data._prop = `font-size:$1;font-weight:$2`\r\n                data._values = [v1, v2]\r\n                return data\r\n           \r\n            }\r\n            if (+v1[0]) {\r\n                data._prop = 'font-size:$1'\r\n                return data\r\n            }\r\n        \r\n            data._prop = 'color:$'\r\n            return data\r\n\r\n            \r\n        }\r\n\r\n    };\r\n    \r\n    classes.object = classes.fit;\r\n    classes.overflow = classes.over;\r\n    classes.op = classes.opacity;\r\n\r\n    return classes\r\n}\r\n\r\n\r\n\r\n// export default classes;\r\n", "export function CreateColors() {\r\n    return {\r\n        black:  { def: \"#000\" },\r\n        white:  { def: \"#fff\" },\r\n        gray:   { def: \"#6b7280\", 1: \"#f3f4f6\", 2: \"#d1d5db\", 3: \"#374151\", 4: \"#111827\" }, \r\n        red:    { def: \"#ef4444\", 1: \"#fee2e2\", 2: \"#fca5a5\", 3: \"#b91c1c\", 4: \"#7f1d1d\" }, \r\n        orange: { def: \"#f97316\", 1: \"#ffedd5\", 2: \"#fdba74\", 3: \"#c2410c\", 4: \"#7c2d12\" }, \r\n        yellow: { def: \"#eab308\", 1: \"#fef9c3\", 2: \"#fde047\", 3: \"#a16207\", 4: \"#713f12\" }, \r\n        lime:   { def: \"#84cc16\", 1: \"#ecfccb\", 2: \"#bef264\", 3: \"#4d7c0f\", 4: \"#365314\" }, \r\n        green:  { def: \"#22c55e\", 1: \"#dcfce7\", 2: \"#86efac\", 3: \"#15803d\", 4: \"#14532d\" }, \r\n        cyan:   { def: \"#06b6d4\", 1: \"#cffafe\", 2: \"#67e8f9\", 3: \"#0e7490\", 4: \"#164e63\" }, \r\n        blue:   { def: \"#3b82f6\", 1: \"#dbeafe\", 2: \"#93c5fd\", 3: \"#1d4ed8\", 4: \"#1e3a8a\" }, \r\n        purple: { def: \"#a855f7\", 1: \"#f3e8ff\", 2: \"#d8b4fe\", 3: \"#7e22ce\", 4: \"#581c87\" }, \r\n        pink:   { def: \"#ec4899\", 1: \"#fce7f3\", 2: \"#f9a8d4\", 3: \"#be185d\", 4: \"#831843\" }, \r\n    }\r\n}", "export function CreateFonts() {\r\n    return {\r\n        main:  'system-ui,-apple-system,sans-serif',\r\n        serif: 'serif',\r\n        mono:  'monospace',\r\n        sans:  'sans-serif',\r\n    }\r\n};\r\n", "export function CreateReset() {\r\n    return `*,::after,::before{box-sizing:border-box;object-fit:cover;-webkit-tap-highlight-color:transparent;font-feature-settings:\"pnum\" on,\"lnum\" on;outline:0;border:0;margin:0;padding:0;border-style:solid;color:inherit}h1,h2,h3,h4,h5,h6{font-size:var(--fsz);font-weight:700;line-height:1.2}h1{--fsz:2.5rem}h2{--fsz:2rem}h3{--fsz:1.75rem}h4{--fsz:1.5rem}h5{--fsz:1.25rem}h6{--fsz:1rem}a{text-decoration:none}hr{width:100%;margin:20px 0;border-top:1px solid #aaa}ul[role=\"list\"],ol[role=\"list\"]{list-style:none}html:focus-within{scroll-behavior:smooth}body{text-rendering:optimizeSpeed;font-family:var(--font-main)}a:not([class]){text-decoration-skip-ink:auto}img,picture{max-width:100%;vertical-align:middle}input,button,textarea,select{font:inherit}[hidden]{display:none}option{color:#000;background-color:#fff}.theme-dark{background-color:#222}.theme-dark *{color:#eee}`;\r\n}\r\n\r\n// normalize_css\r\n//export default `html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}`\r\n", "export function CreateScreens() {\r\n    return {\r\n        sm: 576,\r\n        md: 768,\r\n        lg: 992,\r\n        xl: 1200,\r\n    }\r\n}\r\n", "export function CreateStates() {\r\n    return {\r\n        h: ':hover',\r\n        f: ':focus',\r\n        c: ':checked',\r\n        a: ':active',\r\n        first: '>*:first-child',\r\n        ft: '>*:first-child',\r\n        last: '>*:last-child',\r\n        lt: '>*:last-child',\r\n        odd: '>*:nth-child(odd)',\r\n        od: '>*:nth-child(odd)',\r\n        even: '>*:nth-child(even)',\r\n        ev: '>*:nth-child(even)',\r\n        all: ' *',\r\n        '*': ' *',\r\n        every: '>*',\r\n        '>': '>*',\r\n        between: '>*+*',\r\n        bt: '>*+*',\r\n        after: '::after',\r\n        aft: '::after',\r\n        before: '::before',\r\n        bef: '::before',\r\n        dark: (selector) => `.dark ${selector}`,\r\n    };\r\n}\r\n", "export function createAttrRegexp(attr = \"class\") {\r\n    attr =  attr == \"class\" ? \"(?:class|className)\" : attr\r\n    const REGEXP = `\\\\s+${attr}\\\\s*=\\\\s*([\"'\\`])(.*?)\\\\1`\r\n    const FLAGS = 'g';\r\n\r\n    return new RegExp( REGEXP, FLAGS );\r\n}\r\n\r\n", "import createCss from \"./create-css.js\";\r\nimport prerender from \"./prerender.js\";\r\n\r\nimport { updateStore } from \"./update-store.js\";\r\nimport { createAttrRegexp } from \"../node/funcs/create-attr-regexp.js\";\r\nimport { CreateStore } from \"./create-store.js\";\r\n\r\nexport class HTMLProcessor {\r\n    constructor(ctx) {\r\n        this.ctx = ctx\r\n    }\r\n\r\n    css(html = \"\"){\r\n        const ATTRS = [\"class\", ...Object.keys(this.ctx.attr)];\r\n    \r\n        this.ctx._STORE_ = CreateStore()\r\n    \r\n        prerender(this.ctx)\r\n    \r\n        for (const attr of ATTRS) {\r\n            const MATCHES = [...html.matchAll(createAttrRegexp(attr))]\r\n    \r\n            if (MATCHES.length) {\r\n                const ATTR_VALUE = MATCHES.map(e => e[2]).join(\" \")\r\n    \r\n                if (ATTR_VALUE.trim()) {\r\n                    for (const token of ATTR_VALUE.trim().split(/\\s+/g)) {\r\n                        updateStore(this.ctx, token, attr)\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    \r\n        return createCss(this.ctx)\r\n    }\r\n}", "import version   from \"../version.js\"\r\nimport render    from \"./lib/render.js\"\r\nimport sendError from \"./helpers/send-error.js\"\r\n\r\nimport { Parser        } from \"./lib/parser/index.js\"\r\nimport { CreateStore   } from \"./lib/create-store.js\"\r\nimport { CreateAttrs   } from \"./theme/attrs/index.js\"\r\nimport { CreateClasses } from \"./theme/class.js\"\r\nimport { CreateColors  } from \"./theme/colors.js\"\r\nimport { CreateFonts   } from \"./theme/font.js\"\r\nimport { CreateReset   } from \"./theme/reset.js\"\r\nimport { CreateScreens } from \"./theme/screen.js\"\r\nimport { CreateStates  } from \"./theme/states.js\"\r\nimport { HTMLProcessor } from \"./lib/from-html.js\"\r\nimport { is } from \"./lib/check-type.js\"\r\n\r\nexport class BlickCss {\r\n    #parser \r\n    #html   \r\n\r\n    constructor(params = {}) {\r\n        this.env = params.env \r\n        this.#parser = new Parser(this) \r\n        this.#html   = new HTMLProcessor(this)   \r\n    }\r\n\r\n    class  = CreateClasses()\r\n    attr   = CreateAttrs()\r\n    screen = CreateScreens()\r\n    states = CreateStates()\r\n    colors = CreateColors()\r\n    font   = CreateFonts()\r\n    reset  = CreateReset()\r\n\r\n\r\n    autoTheme = false\r\n    beautify  = false\r\n    autoFlex  = true\r\n    useAttr   = true\r\n    time      = false\r\n    root      = true\r\n\r\n    wrapper = '.wrapper'\r\n    maxPrefix = 'm-'\r\n    divisionSymbol = \"+\"\r\n\r\n    beautifyOption = null\r\n    version = version\r\n    element = null\r\n\r\n\r\n    parse(token = '', attr = 'class') {\r\n        return this.#parser.parse(token, attr)\r\n    }\r\n\r\n\r\n    html(code = \"\") {\r\n        return this.#html.css(code)\r\n    }\r\n\r\n\r\n    config(updates = this, source = this, isFirstCall = true) {\r\n        if (updates === source) return source\r\n    \r\n        if (!is.obj(updates)) {\r\n            return sendError(\"The blick.config function must contain an object\")\r\n        }\r\n\r\n        for (let key in updates) {\r\n            if (is.null(updates[key]) || is.undef(updates[key])) {\r\n                delete source[key]\r\n            }\r\n            else if (is.obj(updates[key]) && !is.arr(updates[key])) {\r\n                if (!source[key] || is.str(source[key])) {\r\n                    source[key] = {};\r\n                }\r\n                this.config(updates[key], source[key], false);\r\n            }\r\n            else {\r\n                source[key] = updates[key];\r\n            }\r\n        }\r\n\r\n        if (isFirstCall) {\r\n            // code on use config\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n\r\n    setup(params) {\r\n        const { element, id } = params || {}\r\n\r\n        if (typeof window == 'undefined') {\r\n            console.log(\"BlickError: you can only use setup in the browser\")\r\n        }\r\n\r\n        const STYLE_TAG = element || document.createElement('style');\r\n        STYLE_TAG.id = id || 'BLICK_OUTPUT_' + Math.floor(Math.random() * 1000);\r\n        document.head.append(STYLE_TAG);\r\n\r\n        this.element = STYLE_TAG\r\n        \r\n        return this\r\n    }\r\n\r\n\r\n    render() {\r\n        return render(this)\r\n    }\r\n\r\n\r\n    _STORE_ = CreateStore()\r\n}", "import { BlickCss } from './blick.js';\r\nimport RENDER from './lib/render.js';\r\n// import context from './context.js';\r\n\r\nconst BLICK = new BlickCss({ env: \"browser\" })\r\n\r\nBLICK.setup({\r\n    id: \"BLICK_OUTPUT\"\r\n})\r\n\r\nwindow.blick = BLICK;\r\nwindow.BlickCss = BlickCss;\r\n\r\n// context.set(BLICK);\r\n\r\nconst observer = new MutationObserver(() => RENDER(BLICK))\r\n\r\nconst observer_params = {\r\n    attributeFilter: [\r\n        'class',\r\n        ...Object.keys(BLICK.attr)\r\n    ],\r\n    childList: true,\r\n    attributes: true,\r\n    subtree: true,\r\n}\r\n\r\nobserver.observe(document.documentElement, observer_params);"],
  "mappings": "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",
  "names": ["_a"]
}
